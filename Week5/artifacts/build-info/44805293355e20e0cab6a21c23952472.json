{
	"id": "44805293355e20e0cab6a21c23952472",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Week5/FunctionSelector.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\ncontract FunctionSelector {\n    function encodeWithSignature() external pure returns(bytes memory) {\n        return abi.encodeWithSignature(\"sum(uint256,uint256)\");\n    }\n\n    function encodeWithSignatureManual() external pure returns(bytes32) {\n        return bytes4(keccak256(bytes(\"sum(uint256,uint256)\")));\n    }\n}\n\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Week5/FunctionSelector.sol": {
				"FunctionSelector": {
					"abi": [
						{
							"inputs": [],
							"name": "encodeWithSignature",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "encodeWithSignatureManual",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Week5/FunctionSelector.sol\":70:388  contract FunctionSelector {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Week5/FunctionSelector.sol\":70:388  contract FunctionSelector {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x72d9353c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe4f2a84a\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Week5/FunctionSelector.sol\":246:386  function encodeWithSignatureManual() external pure returns(bytes32) {... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Week5/FunctionSelector.sol\":102:240  function encodeWithSignature() external pure returns(bytes memory) {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Week5/FunctionSelector.sol\":246:386  function encodeWithSignatureManual() external pure returns(bytes32) {... */\n    tag_6:\n        /* \"Week5/FunctionSelector.sol\":305:312  bytes32 */\n      0x00\n        /* \"Week5/FunctionSelector.sol\":348:377  bytes(\"sum(uint256,uint256)\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      0x73756d2875696e743235362c75696e7432353629000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"Week5/FunctionSelector.sol\":338:378  keccak256(bytes(\"sum(uint256,uint256)\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Week5/FunctionSelector.sol\":324:379  return bytes4(keccak256(bytes(\"sum(uint256,uint256)\"))) */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      pop\n        /* \"Week5/FunctionSelector.sol\":246:386  function encodeWithSignatureManual() external pure returns(bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"Week5/FunctionSelector.sol\":102:240  function encodeWithSignature() external pure returns(bytes memory) {... */\n    tag_10:\n        /* \"Week5/FunctionSelector.sol\":155:167  bytes memory */\n      0x60\n        /* \"Week5/FunctionSelector.sol\":186:233  abi.encodeWithSignature(\"sum(uint256,uint256)\") */\n      add(0x24, mload(0x40))\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0xcad0899b00000000000000000000000000000000000000000000000000000000)\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"Week5/FunctionSelector.sol\":179:233  return abi.encodeWithSignature(\"sum(uint256,uint256)\") */\n      swap1\n      pop\n        /* \"Week5/FunctionSelector.sol\":102:240  function encodeWithSignature() external pure returns(bytes memory) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:125   */\n    tag_16:\n        /* \"#utility.yul\":94:118   */\n      tag_18\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_19\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":7:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:491   */\n    tag_20:\n        /* \"#utility.yul\":217:220   */\n      0x00\n        /* \"#utility.yul\":245:283   */\n      tag_22\n        /* \"#utility.yul\":277:282   */\n      dup3\n        /* \"#utility.yul\":245:283   */\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":299:369   */\n      tag_24\n        /* \"#utility.yul\":362:368   */\n      dup2\n        /* \"#utility.yul\":357:360   */\n      dup6\n        /* \"#utility.yul\":299:369   */\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":292:369   */\n      swap4\n      pop\n        /* \"#utility.yul\":378:430   */\n      tag_26\n        /* \"#utility.yul\":423:429   */\n      dup2\n        /* \"#utility.yul\":418:421   */\n      dup6\n        /* \"#utility.yul\":411:415   */\n      0x20\n        /* \"#utility.yul\":404:409   */\n      dup7\n        /* \"#utility.yul\":400:416   */\n      add\n        /* \"#utility.yul\":378:430   */\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":455:484   */\n      tag_28\n        /* \"#utility.yul\":477:483   */\n      dup2\n        /* \"#utility.yul\":455:484   */\n      tag_29\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":450:453   */\n      dup5\n        /* \"#utility.yul\":446:485   */\n      add\n        /* \"#utility.yul\":439:485   */\n      swap2\n      pop\n        /* \"#utility.yul\":221:491   */\n      pop\n        /* \"#utility.yul\":131:491   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":497:719   */\n    tag_8:\n        /* \"#utility.yul\":590:594   */\n      0x00\n        /* \"#utility.yul\":628:630   */\n      0x20\n        /* \"#utility.yul\":617:626   */\n      dup3\n        /* \"#utility.yul\":613:631   */\n      add\n        /* \"#utility.yul\":605:631   */\n      swap1\n      pop\n        /* \"#utility.yul\":641:712   */\n      tag_31\n        /* \"#utility.yul\":709:710   */\n      0x00\n        /* \"#utility.yul\":698:707   */\n      dup4\n        /* \"#utility.yul\":694:711   */\n      add\n        /* \"#utility.yul\":685:691   */\n      dup5\n        /* \"#utility.yul\":641:712   */\n      tag_16\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":497:719   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":725:1034   */\n    tag_12:\n        /* \"#utility.yul\":836:840   */\n      0x00\n        /* \"#utility.yul\":874:876   */\n      0x20\n        /* \"#utility.yul\":863:872   */\n      dup3\n        /* \"#utility.yul\":859:877   */\n      add\n        /* \"#utility.yul\":851:877   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:932   */\n      dup2\n        /* \"#utility.yul\":917:921   */\n      dup2\n        /* \"#utility.yul\":913:933   */\n      sub\n        /* \"#utility.yul\":909:910   */\n      0x00\n        /* \"#utility.yul\":898:907   */\n      dup4\n        /* \"#utility.yul\":894:911   */\n      add\n        /* \"#utility.yul\":887:934   */\n      mstore\n        /* \"#utility.yul\":951:1027   */\n      tag_33\n        /* \"#utility.yul\":1022:1026   */\n      dup2\n        /* \"#utility.yul\":1013:1019   */\n      dup5\n        /* \"#utility.yul\":951:1027   */\n      tag_20\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":943:1027   */\n      swap1\n      pop\n        /* \"#utility.yul\":725:1034   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1040:1138   */\n    tag_23:\n        /* \"#utility.yul\":1091:1097   */\n      0x00\n        /* \"#utility.yul\":1125:1130   */\n      dup2\n        /* \"#utility.yul\":1119:1131   */\n      mload\n        /* \"#utility.yul\":1109:1131   */\n      swap1\n      pop\n        /* \"#utility.yul\":1040:1138   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1144:1312   */\n    tag_25:\n        /* \"#utility.yul\":1227:1238   */\n      0x00\n        /* \"#utility.yul\":1261:1267   */\n      dup3\n        /* \"#utility.yul\":1256:1259   */\n      dup3\n        /* \"#utility.yul\":1249:1268   */\n      mstore\n        /* \"#utility.yul\":1301:1305   */\n      0x20\n        /* \"#utility.yul\":1296:1299   */\n      dup3\n        /* \"#utility.yul\":1292:1306   */\n      add\n        /* \"#utility.yul\":1277:1306   */\n      swap1\n      pop\n        /* \"#utility.yul\":1144:1312   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1318:1395   */\n    tag_19:\n        /* \"#utility.yul\":1355:1362   */\n      0x00\n        /* \"#utility.yul\":1384:1389   */\n      dup2\n        /* \"#utility.yul\":1373:1389   */\n      swap1\n      pop\n        /* \"#utility.yul\":1318:1395   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1401:1708   */\n    tag_27:\n        /* \"#utility.yul\":1469:1470   */\n      0x00\n        /* \"#utility.yul\":1479:1592   */\n    tag_38:\n        /* \"#utility.yul\":1493:1499   */\n      dup4\n        /* \"#utility.yul\":1490:1491   */\n      dup2\n        /* \"#utility.yul\":1487:1500   */\n      lt\n        /* \"#utility.yul\":1479:1592   */\n      iszero\n      tag_40\n      jumpi\n        /* \"#utility.yul\":1578:1579   */\n      dup1\n        /* \"#utility.yul\":1573:1576   */\n      dup3\n        /* \"#utility.yul\":1569:1580   */\n      add\n        /* \"#utility.yul\":1563:1581   */\n      mload\n        /* \"#utility.yul\":1559:1560   */\n      dup2\n        /* \"#utility.yul\":1554:1557   */\n      dup5\n        /* \"#utility.yul\":1550:1561   */\n      add\n        /* \"#utility.yul\":1543:1582   */\n      mstore\n        /* \"#utility.yul\":1515:1517   */\n      0x20\n        /* \"#utility.yul\":1512:1513   */\n      dup2\n        /* \"#utility.yul\":1508:1518   */\n      add\n        /* \"#utility.yul\":1503:1518   */\n      swap1\n      pop\n        /* \"#utility.yul\":1479:1592   */\n      jump(tag_38)\n    tag_40:\n        /* \"#utility.yul\":1610:1616   */\n      dup4\n        /* \"#utility.yul\":1607:1608   */\n      dup2\n        /* \"#utility.yul\":1604:1617   */\n      gt\n        /* \"#utility.yul\":1601:1702   */\n      iszero\n      tag_41\n      jumpi\n        /* \"#utility.yul\":1690:1691   */\n      0x00\n        /* \"#utility.yul\":1681:1687   */\n      dup5\n        /* \"#utility.yul\":1676:1679   */\n      dup5\n        /* \"#utility.yul\":1672:1688   */\n      add\n        /* \"#utility.yul\":1665:1692   */\n      mstore\n        /* \"#utility.yul\":1601:1702   */\n    tag_41:\n        /* \"#utility.yul\":1450:1708   */\n      pop\n        /* \"#utility.yul\":1401:1708   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1714:1816   */\n    tag_29:\n        /* \"#utility.yul\":1755:1761   */\n      0x00\n        /* \"#utility.yul\":1806:1808   */\n      0x1f\n        /* \"#utility.yul\":1802:1809   */\n      not\n        /* \"#utility.yul\":1797:1799   */\n      0x1f\n        /* \"#utility.yul\":1790:1795   */\n      dup4\n        /* \"#utility.yul\":1786:1800   */\n      add\n        /* \"#utility.yul\":1782:1810   */\n      and\n        /* \"#utility.yul\":1772:1810   */\n      swap1\n      pop\n        /* \"#utility.yul\":1714:1816   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220714fd851060c669d5d07bf01922a42ad761037d7697f52c9b187ea3b9983165f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610289806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806372d9353c1461003b578063e4f2a84a14610059575b600080fd5b610043610077565b60405161005091906101ac565b60405180910390f35b6100616100da565b60405161006e91906101c7565b60405180910390f35b60006040518060400160405280601481526020017f73756d2875696e743235362c75696e7432353629000000000000000000000000815250805190602001207bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916905090565b60606040516024016040516020818303038152906040527fcad0899b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905090565b61016d81610205565b82525050565b600061017e826101e9565b61018881856101f4565b935061019881856020860161020f565b6101a181610242565b840191505092915050565b60006020820190506101c16000830184610164565b92915050565b600060208201905081810360008301526101e18184610173565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b60005b8381101561022d578082015181840152602081019050610212565b8381111561023c576000848401525b50505050565b6000601f19601f830116905091905056fea2646970667358221220714fd851060c669d5d07bf01922a42ad761037d7697f52c9b187ea3b9983165f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x289 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72D9353C EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE4F2A84A EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0xDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x1C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x73756D2875696E743235362C75696E7432353629000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xCAD0899B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x16D DUP2 PUSH2 0x205 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17E DUP3 PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x188 DUP2 DUP6 PUSH2 0x1F4 JUMP JUMPDEST SWAP4 POP PUSH2 0x198 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20F JUMP JUMPDEST PUSH2 0x1A1 DUP2 PUSH2 0x242 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x164 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E1 DUP2 DUP5 PUSH2 0x173 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x212 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x4FD851060C669D5D07BF01922A42AD761037 0xD7 PUSH10 0x7F52C9B187EA3B998316 0x5F PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "70:318:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@encodeWithSignatureManual_28": {
									"entryPoint": 119,
									"id": 28,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@encodeWithSignature_12": {
									"entryPoint": 218,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 527,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1819:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:1"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:1",
														"type": ""
													}
												],
												"src": "7:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "221:270:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "231:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "245:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "245:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "235:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "292:77:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "357:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "362:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "299:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "299:70:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "404:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "411:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "400:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "400:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "418:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "423:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "378:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "378:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "378:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "439:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "450:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "477:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "455:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "455:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "446:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "439:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "202:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "209:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "217:3:1",
														"type": ""
													}
												],
												"src": "131:360:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "595:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "605:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "617:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "628:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "613:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "613:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "605:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "685:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "698:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "709:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "694:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "694:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "641:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "641:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "641:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "567:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "579:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "590:4:1",
														"type": ""
													}
												],
												"src": "497:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "841:193:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "851:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "863:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "859:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "859:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "851:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "898:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "909:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "894:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "894:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "917:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "923:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "913:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "913:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "887:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "887:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "887:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "943:84:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1013:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1022:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "951:61:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "951:76:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "943:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "813:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "825:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "836:4:1",
														"type": ""
													}
												],
												"src": "725:309:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1098:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1125:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1119:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1119:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1109:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1081:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1091:6:1",
														"type": ""
													}
												],
												"src": "1040:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1239:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1256:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1261:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1249:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1249:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1249:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1277:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1296:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1301:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1292:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1292:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1277:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1211:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1216:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1227:11:1",
														"type": ""
													}
												],
												"src": "1144:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1373:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1384:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1373:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1345:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1355:7:1",
														"type": ""
													}
												],
												"src": "1318:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1450:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1460:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1469:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1464:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1529:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1554:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1559:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1550:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1550:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1573:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1578:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1569:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1569:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1563:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1563:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1543:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1543:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1543:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1490:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1493:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1487:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1487:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1501:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1503:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1512:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1515:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1508:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1508:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1503:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1483:3:1",
																"statements": []
															},
															"src": "1479:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1626:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1676:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1681:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1672:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1672:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1690:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1665:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1665:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1665:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1607:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1610:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1604:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1604:13:1"
															},
															"nodeType": "YulIf",
															"src": "1601:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1432:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1437:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1442:6:1",
														"type": ""
													}
												],
												"src": "1401:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1762:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1772:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1790:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1797:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1786:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1786:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1806:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1802:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1802:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1782:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1782:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1772:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1745:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1755:6:1",
														"type": ""
													}
												],
												"src": "1714:102:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806372d9353c1461003b578063e4f2a84a14610059575b600080fd5b610043610077565b60405161005091906101ac565b60405180910390f35b6100616100da565b60405161006e91906101c7565b60405180910390f35b60006040518060400160405280601481526020017f73756d2875696e743235362c75696e7432353629000000000000000000000000815250805190602001207bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916905090565b60606040516024016040516020818303038152906040527fcad0899b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905090565b61016d81610205565b82525050565b600061017e826101e9565b61018881856101f4565b935061019881856020860161020f565b6101a181610242565b840191505092915050565b60006020820190506101c16000830184610164565b92915050565b600060208201905081810360008301526101e18184610173565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b60005b8381101561022d578082015181840152602081019050610212565b8381111561023c576000848401525b50505050565b6000601f19601f830116905091905056fea2646970667358221220714fd851060c669d5d07bf01922a42ad761037d7697f52c9b187ea3b9983165f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72D9353C EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE4F2A84A EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0xDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x1C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x73756D2875696E743235362C75696E7432353629000000000000000000000000 DUP2 MSTORE POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xCAD0899B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x16D DUP2 PUSH2 0x205 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17E DUP3 PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x188 DUP2 DUP6 PUSH2 0x1F4 JUMP JUMPDEST SWAP4 POP PUSH2 0x198 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20F JUMP JUMPDEST PUSH2 0x1A1 DUP2 PUSH2 0x242 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x164 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E1 DUP2 DUP5 PUSH2 0x173 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x212 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x4FD851060C669D5D07BF01922A42AD761037 0xD7 PUSH10 0x7F52C9B187EA3B998316 0x5F PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "70:318:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;246:140;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;102:138;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;246:140;305:7;348:29;;;;;;;;;;;;;;;;;338:40;;;;;;324:55;;;;;246:140;:::o;102:138::-;155:12;186:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;179:54;;102:138;:::o;7:118:1:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;7:118;;:::o;131:360::-;217:3;245:38;277:5;245:38;:::i;:::-;299:70;362:6;357:3;299:70;:::i;:::-;292:77;;378:52;423:6;418:3;411:4;404:5;400:16;378:52;:::i;:::-;455:29;477:6;455:29;:::i;:::-;450:3;446:39;439:46;;221:270;131:360;;;;:::o;497:222::-;590:4;628:2;617:9;613:18;605:26;;641:71;709:1;698:9;694:17;685:6;641:71;:::i;:::-;497:222;;;;:::o;725:309::-;836:4;874:2;863:9;859:18;851:26;;923:9;917:4;913:20;909:1;898:9;894:17;887:47;951:76;1022:4;1013:6;951:76;:::i;:::-;943:84;;725:309;;;;:::o;1040:98::-;1091:6;1125:5;1119:12;1109:22;;1040:98;;;:::o;1144:168::-;1227:11;1261:6;1256:3;1249:19;1301:4;1296:3;1292:14;1277:29;;1144:168;;;;:::o;1318:77::-;1355:7;1384:5;1373:16;;1318:77;;;:::o;1401:307::-;1469:1;1479:113;1493:6;1490:1;1487:13;1479:113;;;1578:1;1573:3;1569:11;1563:18;1559:1;1554:3;1550:11;1543:39;1515:2;1512:1;1508:10;1503:15;;1479:113;;;1610:6;1607:1;1604:13;1601:101;;;1690:1;1681:6;1676:3;1672:16;1665:27;1601:101;1450:258;1401:307;;;:::o;1714:102::-;1755:6;1806:2;1802:7;1797:2;1790:5;1786:14;1782:28;1772:38;;1714:102;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "129800",
								"executionCost": "177",
								"totalCost": "129977"
							},
							"external": {
								"encodeWithSignature()": "infinite",
								"encodeWithSignatureManual()": "428"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 70,
									"end": 388,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 70,
									"end": 388,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 70,
									"end": 388,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 70,
									"end": 388,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 70,
									"end": 388,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 70,
									"end": 388,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 70,
									"end": 388,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 70,
									"end": 388,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 70,
									"end": 388,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 388,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 70,
									"end": 388,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 70,
									"end": 388,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 70,
									"end": 388,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 70,
									"end": 388,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 70,
									"end": 388,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70,
									"end": 388,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 70,
									"end": 388,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70,
									"end": 388,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 388,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 70,
									"end": 388,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 388,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220714fd851060c669d5d07bf01922a42ad761037d7697f52c9b187ea3b9983165f64736f6c63430008070033",
									".code": [
										{
											"begin": 70,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 70,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70,
											"end": 388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 388,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 388,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 70,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 70,
											"end": 388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 388,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 70,
											"end": 388,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 70,
											"end": 388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70,
											"end": 388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70,
											"end": 388,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 388,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 70,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 70,
											"end": 388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 388,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 70,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 70,
											"end": 388,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 70,
											"end": 388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "72D9353C"
										},
										{
											"begin": 70,
											"end": 388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 70,
											"end": 388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "E4F2A84A"
										},
										{
											"begin": 70,
											"end": 388,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70,
											"end": 388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70,
											"end": 388,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 70,
											"end": 388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70,
											"end": 388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 388,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 246,
											"end": 386,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 246,
											"end": 386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 246,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 246,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 246,
											"end": 386,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 246,
											"end": 386,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 246,
											"end": 386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 246,
											"end": 386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 246,
											"end": 386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 246,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 246,
											"end": 386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 246,
											"end": 386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 246,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 246,
											"end": 386,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 246,
											"end": 386,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 246,
											"end": 386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 246,
											"end": 386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 246,
											"end": 386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 246,
											"end": 386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 246,
											"end": 386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 246,
											"end": 386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 246,
											"end": 386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 246,
											"end": 386,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 102,
											"end": 240,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 102,
											"end": 240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 102,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 102,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 102,
											"end": 240,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 102,
											"end": 240,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 102,
											"end": 240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 102,
											"end": 240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 240,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 102,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 102,
											"end": 240,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 102,
											"end": 240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 102,
											"end": 240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 102,
											"end": 240,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 102,
											"end": 240,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 102,
											"end": 240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 102,
											"end": 240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 102,
											"end": 240,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 102,
											"end": 240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 102,
											"end": 240,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 102,
											"end": 240,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 102,
											"end": 240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 102,
											"end": 240,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 246,
											"end": 386,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 246,
											"end": 386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 305,
											"end": 312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 377,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 377,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 348,
											"end": 377,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 348,
											"end": 377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 377,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 348,
											"end": 377,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 348,
											"end": 377,
											"name": "PUSH",
											"source": 0,
											"value": "73756D2875696E743235362C75696E7432353629000000000000000000000000"
										},
										{
											"begin": 348,
											"end": 377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 348,
											"end": 377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 348,
											"end": 377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 338,
											"end": 378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 338,
											"end": 378,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 338,
											"end": 378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 338,
											"end": 378,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 338,
											"end": 378,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 338,
											"end": 378,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 324,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 324,
											"end": 379,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 324,
											"end": 379,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 324,
											"end": 379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 324,
											"end": 379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 246,
											"end": 386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 246,
											"end": 386,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 102,
											"end": 240,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 102,
											"end": 240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 155,
											"end": 167,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 186,
											"end": 233,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 186,
											"end": 233,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 186,
											"end": 233,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 186,
											"end": 233,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 186,
											"end": 233,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 186,
											"end": 233,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 186,
											"end": 233,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 186,
											"end": 233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 186,
											"end": 233,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 186,
											"end": 233,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 186,
											"end": 233,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 186,
											"end": 233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 186,
											"end": 233,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 186,
											"end": 233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 186,
											"end": 233,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 186,
											"end": 233,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 186,
											"end": 233,
											"name": "PUSH",
											"source": 0,
											"value": "CAD0899B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 186,
											"end": 233,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 186,
											"end": 233,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 186,
											"end": 233,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 186,
											"end": 233,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 186,
											"end": 233,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 186,
											"end": 233,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 186,
											"end": 233,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 186,
											"end": 233,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 186,
											"end": 233,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 186,
											"end": 233,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 186,
											"end": 233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 186,
											"end": 233,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 186,
											"end": 233,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 186,
											"end": 233,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 186,
											"end": 233,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 186,
											"end": 233,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 186,
											"end": 233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 186,
											"end": 233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 186,
											"end": 233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 186,
											"end": 233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 179,
											"end": 233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 102,
											"end": 240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 102,
											"end": 240,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 131,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 217,
											"end": 220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 245,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 245,
											"end": 283,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 245,
											"end": 283,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 245,
											"end": 283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 299,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 362,
											"end": 368,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 357,
											"end": 360,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 299,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 299,
											"end": 369,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 299,
											"end": 369,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 299,
											"end": 369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 292,
											"end": 369,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 292,
											"end": 369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 423,
											"end": 429,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 418,
											"end": 421,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 411,
											"end": 415,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 400,
											"end": 416,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 378,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 378,
											"end": 430,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 378,
											"end": 430,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 378,
											"end": 430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 455,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 477,
											"end": 483,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 455,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 455,
											"end": 484,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 455,
											"end": 484,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 455,
											"end": 484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 450,
											"end": 453,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 446,
											"end": 485,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 439,
											"end": 485,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 439,
											"end": 485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 221,
											"end": 491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 131,
											"end": 491,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 131,
											"end": 491,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 131,
											"end": 491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 131,
											"end": 491,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 497,
											"end": 719,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 497,
											"end": 719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 590,
											"end": 594,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 630,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 617,
											"end": 626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 613,
											"end": 631,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 605,
											"end": 631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 605,
											"end": 631,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 709,
											"end": 710,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 707,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 694,
											"end": 711,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 685,
											"end": 691,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 641,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 641,
											"end": 712,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 712,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 641,
											"end": 712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 497,
											"end": 719,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 497,
											"end": 719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 497,
											"end": 719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 497,
											"end": 719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 497,
											"end": 719,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 725,
											"end": 1034,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 725,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 836,
											"end": 840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 863,
											"end": 872,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 859,
											"end": 877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 851,
											"end": 877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 851,
											"end": 877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 923,
											"end": 932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 917,
											"end": 921,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 913,
											"end": 933,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 909,
											"end": 910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 898,
											"end": 907,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 894,
											"end": 911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 887,
											"end": 934,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 951,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1022,
											"end": 1026,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1019,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 951,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 951,
											"end": 1027,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 951,
											"end": 1027,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 951,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 943,
											"end": 1027,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 943,
											"end": 1027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 725,
											"end": 1034,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 725,
											"end": 1034,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 725,
											"end": 1034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 725,
											"end": 1034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 725,
											"end": 1034,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1040,
											"end": 1138,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1040,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1125,
											"end": 1130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1131,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1131,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1138,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1144,
											"end": 1312,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1144,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1261,
											"end": 1267,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1249,
											"end": 1268,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1305,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 1299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1277,
											"end": 1306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1277,
											"end": 1306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1312,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1312,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1312,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1318,
											"end": 1395,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1318,
											"end": 1395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1389,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1389,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1395,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1395,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1401,
											"end": 1708,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1401,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1470,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1479,
											"end": 1592,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1479,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1499,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1490,
											"end": 1491,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1500,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1592,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1479,
											"end": 1592,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1573,
											"end": 1576,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1581,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1560,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1557,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1543,
											"end": 1582,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1517,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1512,
											"end": 1513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1508,
											"end": 1518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1518,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1479,
											"end": 1592,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1592,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1479,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1616,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1607,
											"end": 1608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1604,
											"end": 1617,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1702,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1601,
											"end": 1702,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1679,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1688,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1665,
											"end": 1692,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1702,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1601,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1708,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1714,
											"end": 1816,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1714,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1802,
											"end": 1809,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1799,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1790,
											"end": 1795,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1782,
											"end": 1810,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1714,
											"end": 1816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1714,
											"end": 1816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1714,
											"end": 1816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1714,
											"end": 1816,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"encodeWithSignature()": "e4f2a84a",
							"encodeWithSignatureManual()": "72d9353c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"encodeWithSignature\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"encodeWithSignatureManual\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Week5/FunctionSelector.sol\":\"FunctionSelector\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Week5/FunctionSelector.sol\":{\"keccak256\":\"0xac8255a2375d8471e73d5d58f92430768f1e714c744cb4913a969f3b110d2787\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a765c75a94855fe36307f153f036ef917903eb9630929ccf990af78fe6d21983\",\"dweb:/ipfs/QmWpQaGSczYSBC3QyQRBqN9JAVWhBPvN9WLi4KFxwP8tL1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Week5/FunctionSelector.sol": {
				"ast": {
					"absolutePath": "Week5/FunctionSelector.sol",
					"exportedSymbols": {
						"FunctionSelector": [
							29
						]
					},
					"id": 30,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 29,
							"linearizedBaseContracts": [
								29
							],
							"name": "FunctionSelector",
							"nameLocation": "79:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "169:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "73756d2875696e743235362c75696e7432353629",
															"id": 8,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "210:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cad0899bd3b36a3f96bb5f447592a8effeff6c496c927dfeee80fbc217dede0a",
																"typeString": "literal_string \"sum(uint256,uint256)\""
															},
															"value": "sum(uint256,uint256)"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_cad0899bd3b36a3f96bb5f447592a8effeff6c496c927dfeee80fbc217dede0a",
																"typeString": "literal_string \"sum(uint256,uint256)\""
															}
														],
														"expression": {
															"id": 6,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "186:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 7,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "encodeWithSignature",
														"nodeType": "MemberAccess",
														"src": "186:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (string memory) pure returns (bytes memory)"
														}
													},
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "186:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 5,
												"id": 10,
												"nodeType": "Return",
												"src": "179:54:0"
											}
										]
									},
									"functionSelector": "e4f2a84a",
									"id": 12,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encodeWithSignature",
									"nameLocation": "111:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "130:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "155:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "155:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "154:14:0"
									},
									"scope": 29,
									"src": "102:138:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "314:72:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "73756d2875696e743235362c75696e7432353629",
																			"id": 22,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "354:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_cad0899bd3b36a3f96bb5f447592a8effeff6c496c927dfeee80fbc217dede0a",
																				"typeString": "literal_string \"sum(uint256,uint256)\""
																			},
																			"value": "sum(uint256,uint256)"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_cad0899bd3b36a3f96bb5f447592a8effeff6c496c927dfeee80fbc217dede0a",
																				"typeString": "literal_string \"sum(uint256,uint256)\""
																			}
																		],
																		"id": 21,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "348:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 20,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "348:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 23,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "348:29:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 19,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "338:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "338:40:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "331:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes4_$",
															"typeString": "type(bytes4)"
														},
														"typeName": {
															"id": 17,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "331:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "331:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 16,
												"id": 26,
												"nodeType": "Return",
												"src": "324:55:0"
											}
										]
									},
									"functionSelector": "72d9353c",
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encodeWithSignatureManual",
									"nameLocation": "255:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "280:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "305:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 14,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "304:9:0"
									},
									"scope": 29,
									"src": "246:140:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 30,
							"src": "70:318:0",
							"usedErrors": []
						}
					],
					"src": "37:353:0"
				},
				"id": 0
			}
		}
	}
}