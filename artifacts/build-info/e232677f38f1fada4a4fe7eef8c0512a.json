{
	"id": "e232677f38f1fada4a4fe7eef8c0512a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.16",
	"solcLongVersion": "0.8.16+commit.07a7930e",
	"input": {
		"language": "Solidity",
		"sources": {
			"ClaimBack.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\n// 練習 https://docs.google.com/presentation/d/1-pXrW4Qaes4ZWNXoAio7OnhzTwg-dhgx6cSHxWVALKk/edit#slide=id.g15081281f2e_0_2\ncontract ClaimBack {\n    address constant CONTRACT = 0xd33C69361e00f01C3085ac77ab2fA13bE10376E8;\n    constructor() payable{}\n\n    function send() external payable {\n        payable(CONTRACT).transfer(1000000000000000);\n    }\n\n    receive() external payable {\n    }\n    \n    function claim() external returns(bytes memory) {\n        (bool success, bytes memory data) = address(CONTRACT).call(abi.encodeWithSignature(\"clain(uint256)\", 0));\n        if (!success) {\n            revert();\n        }\n        return data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ClaimBack.sol": {
				"ClaimBack": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "send",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ClaimBack.sol\":195:717  contract ClaimBack {... */\n  mstore(0x40, 0x80)\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ClaimBack.sol\":195:717  contract ClaimBack {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e71d92d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb46300ec\n      eq\n      tag_4\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ClaimBack.sol\":469:715  function claim() external returns(bytes memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ClaimBack.sol\":325:419  function send() external payable {... */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"ClaimBack.sol\":469:715  function claim() external returns(bytes memory) {... */\n    tag_9:\n        /* \"ClaimBack.sol\":586:630  abi.encodeWithSignature(\"clain(uint256)\", 0) */\n      mload(0x40)\n        /* \"ClaimBack.sol\":528:540  bool success */\n      0x00\n        /* \"ClaimBack.sol\":586:630  abi.encodeWithSignature(\"clain(uint256)\", 0) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":820:856   */\n      dup2\n      swap1\n      mstore\n        /* \"ClaimBack.sol\":503:515  bytes memory */\n      0x60\n      swap2\n        /* \"ClaimBack.sol\":528:540  bool success */\n      dup2\n      swap1\n        /* \"ClaimBack.sol\":248:290  0xd33C69361e00f01C3085ac77ab2fA13bE10376E8 */\n      0xd33c69361e00f01c3085ac77ab2fa13be10376e8\n      swap1\n        /* \"#utility.yul\":793:811   */\n      0x44\n      add\n        /* \"ClaimBack.sol\":586:630  abi.encodeWithSignature(\"clain(uint256)\", 0) */\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      dup2\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe1, 0x4d0cb33d)\n      or\n      swap1\n      mstore\n        /* \"ClaimBack.sol\":563:631  address(CONTRACT).call(abi.encodeWithSignature(\"clain(uint256)\", 0)) */\n      mload\n      tag_17\n      swap2\n        /* \"ClaimBack.sol\":586:630  abi.encodeWithSignature(\"clain(uint256)\", 0) */\n      swap1\n        /* \"ClaimBack.sol\":563:631  address(CONTRACT).call(abi.encodeWithSignature(\"clain(uint256)\", 0)) */\n      tag_18\n      jump\t// in\n    tag_17:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_21\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_20)\n    tag_21:\n      0x60\n      swap2\n      pop\n    tag_20:\n      pop\n        /* \"ClaimBack.sol\":527:631  (bool success, bytes memory data) = address(CONTRACT).call(abi.encodeWithSignature(\"clain(uint256)\", 0)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"ClaimBack.sol\":646:653  success */\n      dup2\n        /* \"ClaimBack.sol\":641:688  if (!success) {... */\n      tag_22\n      jumpi\n        /* \"ClaimBack.sol\":669:677  revert() */\n      0x00\n      dup1\n      revert\n        /* \"ClaimBack.sol\":641:688  if (!success) {... */\n    tag_22:\n        /* \"ClaimBack.sol\":704:708  data */\n      swap3\n        /* \"ClaimBack.sol\":469:715  function claim() external returns(bytes memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ClaimBack.sol\":325:419  function send() external payable {... */\n    tag_13:\n        /* \"ClaimBack.sol\":368:412  payable(CONTRACT).transfer(1000000000000000) */\n      mload(0x40)\n        /* \"ClaimBack.sol\":248:290  0xd33C69361e00f01C3085ac77ab2fA13bE10376E8 */\n      0xd33c69361e00f01c3085ac77ab2fa13be10376e8\n      swap1\n        /* \"ClaimBack.sol\":368:412  payable(CONTRACT).transfer(1000000000000000) */\n      0x00\n      swap1\n        /* \"ClaimBack.sol\":395:411  1000000000000000 */\n      0x038d7ea4c68000\n      swap1\n        /* \"ClaimBack.sol\":368:412  payable(CONTRACT).transfer(1000000000000000) */\n      dup3\n      dup2\n      dup2\n      dup2\n        /* \"ClaimBack.sol\":395:411  1000000000000000 */\n      dup6\n        /* \"ClaimBack.sol\":248:290  0xd33C69361e00f01C3085ac77ab2fA13bE10376E8 */\n      dup9\n        /* \"ClaimBack.sol\":368:412  payable(CONTRACT).transfer(1000000000000000) */\n      dup4\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_25\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_25:\n      pop\n        /* \"ClaimBack.sol\":325:419  function send() external payable {... */\n      jump\t// out\n        /* \"#utility.yul\":14:264   */\n    tag_26:\n        /* \"#utility.yul\":99:100   */\n      0x00\n        /* \"#utility.yul\":109:222   */\n    tag_29:\n        /* \"#utility.yul\":123:129   */\n      dup4\n        /* \"#utility.yul\":120:121   */\n      dup2\n        /* \"#utility.yul\":117:130   */\n      lt\n        /* \"#utility.yul\":109:222   */\n      iszero\n      tag_31\n      jumpi\n        /* \"#utility.yul\":199:210   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":193:211   */\n      mload\n        /* \"#utility.yul\":180:191   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":173:212   */\n      mstore\n        /* \"#utility.yul\":145:147   */\n      0x20\n        /* \"#utility.yul\":138:148   */\n      add\n        /* \"#utility.yul\":109:222   */\n      jump(tag_29)\n    tag_31:\n      pop\n      pop\n        /* \"#utility.yul\":256:257   */\n      0x00\n        /* \"#utility.yul\":238:254   */\n      swap2\n      add\n        /* \"#utility.yul\":231:258   */\n      mstore\n        /* \"#utility.yul\":14:264   */\n      jump\t// out\n        /* \"#utility.yul\":269:663   */\n    tag_11:\n        /* \"#utility.yul\":416:418   */\n      0x20\n        /* \"#utility.yul\":405:414   */\n      dup2\n        /* \"#utility.yul\":398:419   */\n      mstore\n        /* \"#utility.yul\":379:383   */\n      0x00\n        /* \"#utility.yul\":448:454   */\n      dup3\n        /* \"#utility.yul\":442:455   */\n      mload\n        /* \"#utility.yul\":491:497   */\n      dup1\n        /* \"#utility.yul\":486:488   */\n      0x20\n        /* \"#utility.yul\":475:484   */\n      dup5\n        /* \"#utility.yul\":471:489   */\n      add\n        /* \"#utility.yul\":464:498   */\n      mstore\n        /* \"#utility.yul\":507:586   */\n      tag_33\n        /* \"#utility.yul\":579:585   */\n      dup2\n        /* \"#utility.yul\":574:576   */\n      0x40\n        /* \"#utility.yul\":563:572   */\n      dup6\n        /* \"#utility.yul\":559:577   */\n      add\n        /* \"#utility.yul\":554:556   */\n      0x20\n        /* \"#utility.yul\":546:552   */\n      dup8\n        /* \"#utility.yul\":542:557   */\n      add\n        /* \"#utility.yul\":507:586   */\n      tag_26\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":647:649   */\n      0x1f\n        /* \"#utility.yul\":626:641   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":622:651   */\n      and\n        /* \"#utility.yul\":607:652   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":654:656   */\n      0x40\n        /* \"#utility.yul\":603:657   */\n      add\n      swap3\n        /* \"#utility.yul\":269:663   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":867:1154   */\n    tag_18:\n        /* \"#utility.yul\":996:999   */\n      0x00\n        /* \"#utility.yul\":1034:1040   */\n      dup3\n        /* \"#utility.yul\":1028:1041   */\n      mload\n        /* \"#utility.yul\":1050:1116   */\n      tag_36\n        /* \"#utility.yul\":1109:1115   */\n      dup2\n        /* \"#utility.yul\":1104:1107   */\n      dup5\n        /* \"#utility.yul\":1097:1101   */\n      0x20\n        /* \"#utility.yul\":1089:1095   */\n      dup8\n        /* \"#utility.yul\":1085:1102   */\n      add\n        /* \"#utility.yul\":1050:1116   */\n      tag_26\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":1132:1148   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":867:1154   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122009bf8f820af10f6e2db0ffb3c2cd7b5d473d1cc7ba768d7e3dcd18db5983d98b64736f6c63430008100033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_8": {
									"entryPoint": null,
									"id": 8,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052610213806100136000396000f3fe60806040526004361061002d5760003560e01c80634e71d92d14610039578063b46300ec1461006457600080fd5b3661003457005b600080fd5b34801561004557600080fd5b5061004e61006e565b60405161005b919061018e565b60405180910390f35b61006c610124565b005b604051600060248201819052606091819073d33c69361e00f01c3085ac77ab2fa13be10376e89060440160408051601f198184030181529181526020820180516001600160e01b0316634d0cb33d60e11b179052516100cd91906101c1565b6000604051808303816000865af19150503d806000811461010a576040519150601f19603f3d011682016040523d82523d6000602084013e61010f565b606091505b50915091508161011e57600080fd5b92915050565b60405173d33c69361e00f01c3085ac77ab2fa13be10376e89060009066038d7ea4c680009082818181858883f19350505050158015610167573d6000803e3d6000fd5b50565b60005b8381101561018557818101518382015260200161016d565b50506000910152565b60208152600082518060208401526101ad81604085016020870161016a565b601f01601f19169190910160400192915050565b600082516101d381846020870161016a565b919091019291505056fea264697066735822122009bf8f820af10f6e2db0ffb3c2cd7b5d473d1cc7ba768d7e3dcd18db5983d98b64736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x213 DUP1 PUSH2 0x13 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xB46300EC EQ PUSH2 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x34 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x18E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0x124 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 SWAP2 DUP2 SWAP1 PUSH20 0xD33C69361E00F01C3085AC77AB2FA13BE10376E8 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x4D0CB33D PUSH1 0xE1 SHL OR SWAP1 MSTORE MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x1C1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xD33C69361E00F01C3085AC77AB2FA13BE10376E8 SWAP1 PUSH1 0x0 SWAP1 PUSH7 0x38D7EA4C68000 SWAP1 DUP3 DUP2 DUP2 DUP2 DUP6 DUP9 DUP4 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x167 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x185 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x16D JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1AD DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x16A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1D3 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x16A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0xBF DUP16 DUP3 EXP CALL 0xF PUSH15 0x2DB0FFB3C2CD7B5D473D1CC7BA768D PUSH31 0x3DCD18DB5983D98B64736F6C63430008100033000000000000000000000000 ",
							"sourceMap": "195:522:0:-:0;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_24": {
									"entryPoint": null,
									"id": 24,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claim_55": {
									"entryPoint": 110,
									"id": 55,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@send_20": {
									"entryPoint": 292,
									"id": 20,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_0_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 362,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1156:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "80:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "90:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "99:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "94:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "159:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "184:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "189:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "180:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "180:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "203:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "208:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "199:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "199:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "193:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "193:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "173:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "173:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "173:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "120:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "123:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "117:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "117:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "131:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "133:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "142:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "145:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "138:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "138:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "133:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "113:3:1",
																"statements": []
															},
															"src": "109:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "242:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "247:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "238:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "238:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "256:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "231:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "231:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "58:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "63:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:1",
														"type": ""
													}
												],
												"src": "14:250:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "388:275:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "416:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "398:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "398:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "428:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "448:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "442:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "442:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "432:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "475:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "486:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "471:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "471:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "491:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "464:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "464:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "464:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "546:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "554:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "542:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "563:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "574:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "559:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "559:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "579:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "507:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "507:79:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "507:79:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "595:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "611:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "630:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "638:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "626:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "626:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "647:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "643:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "643:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "622:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "622:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "607:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "607:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "654:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "603:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "603:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "595:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "357:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "368:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "379:4:1",
														"type": ""
													}
												],
												"src": "269:394:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "775:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "785:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "797:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "808:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "793:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "793:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "785:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "827:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "842:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "850:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "838:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "838:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "820:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "820:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "820:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_0_by_1__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "744:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "755:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "766:4:1",
														"type": ""
													}
												],
												"src": "668:194:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1004:150:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1014:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1034:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1028:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1028:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1018:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1089:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1097:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:17:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1104:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1109:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1050:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1050:66:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1125:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1136:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1141:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1132:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1125:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "980:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "985:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "996:3:1",
														"type": ""
													}
												],
												"src": "867:287:1"
											}
										]
									},
									"contents": "{\n    { }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_rational_0_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061002d5760003560e01c80634e71d92d14610039578063b46300ec1461006457600080fd5b3661003457005b600080fd5b34801561004557600080fd5b5061004e61006e565b60405161005b919061018e565b60405180910390f35b61006c610124565b005b604051600060248201819052606091819073d33c69361e00f01c3085ac77ab2fa13be10376e89060440160408051601f198184030181529181526020820180516001600160e01b0316634d0cb33d60e11b179052516100cd91906101c1565b6000604051808303816000865af19150503d806000811461010a576040519150601f19603f3d011682016040523d82523d6000602084013e61010f565b606091505b50915091508161011e57600080fd5b92915050565b60405173d33c69361e00f01c3085ac77ab2fa13be10376e89060009066038d7ea4c680009082818181858883f19350505050158015610167573d6000803e3d6000fd5b50565b60005b8381101561018557818101518382015260200161016d565b50506000910152565b60208152600082518060208401526101ad81604085016020870161016a565b601f01601f19169190910160400192915050565b600082516101d381846020870161016a565b919091019291505056fea264697066735822122009bf8f820af10f6e2db0ffb3c2cd7b5d473d1cc7ba768d7e3dcd18db5983d98b64736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0xB46300EC EQ PUSH2 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x34 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x18E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0x124 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 SWAP2 DUP2 SWAP1 PUSH20 0xD33C69361E00F01C3085AC77AB2FA13BE10376E8 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x4D0CB33D PUSH1 0xE1 SHL OR SWAP1 MSTORE MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x1C1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xD33C69361E00F01C3085AC77AB2FA13BE10376E8 SWAP1 PUSH1 0x0 SWAP1 PUSH7 0x38D7EA4C68000 SWAP1 DUP3 DUP2 DUP2 DUP2 DUP6 DUP9 DUP4 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x167 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x185 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x16D JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1AD DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x16A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1D3 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x16A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0xBF DUP16 DUP3 EXP CALL 0xF PUSH15 0x2DB0FFB3C2CD7B5D473D1CC7BA768D PUSH31 0x3DCD18DB5983D98B64736F6C63430008100033000000000000000000000000 ",
							"sourceMap": "195:522:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;469:246;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;325:94;;;:::i;:::-;;469:246;586:44;;528:12;586:44;;;820:36:1;;;503:12:0;;528;;248:42;;793:18:1;;586:44:0;;;-1:-1:-1;;586:44:0;;;;;;;;;;;;;;-1:-1:-1;;;;;586:44:0;-1:-1:-1;;;586:44:0;;;563:68;;;586:44;563:68;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;527:104;;;;646:7;641:47;;669:8;;;641:47;704:4;469:246;-1:-1:-1;;469:246:0:o;325:94::-;368:44;;248:42;;368:44;;395:16;;368:44;;;;395:16;248:42;368:44;;;;;;;;;;;;;;;;;;;;;325:94::o;14:250:1:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:1;238:16;;231:27;14:250::o;269:394::-;416:2;405:9;398:21;379:4;448:6;442:13;491:6;486:2;475:9;471:18;464:34;507:79;579:6;574:2;563:9;559:18;554:2;546:6;542:15;507:79;:::i;:::-;647:2;626:15;-1:-1:-1;;622:29:1;607:45;;;;654:2;603:54;;269:394;-1:-1:-1;;269:394:1:o;867:287::-;996:3;1034:6;1028:13;1050:66;1109:6;1104:3;1097:4;1089:6;1085:17;1050:66;:::i;:::-;1132:16;;;;;867:287;-1:-1:-1;;867:287:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "106200",
								"executionCost": "129",
								"totalCost": "106329"
							},
							"external": {
								"claim()": "infinite",
								"send()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 717,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 195,
									"end": 717,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 195,
									"end": 717,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 195,
									"end": 717,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 717,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 195,
									"end": 717,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 717,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 717,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 195,
									"end": 717,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 717,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122009bf8f820af10f6e2db0ffb3c2cd7b5d473d1cc7ba768d7e3dcd18db5983d98b64736f6c63430008100033",
									".code": [
										{
											"begin": 195,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 717,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 195,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 195,
											"end": 717,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 195,
											"end": 717,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 195,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 195,
											"end": 717,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 195,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 717,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 195,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 195,
											"end": 717,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 195,
											"end": 717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 195,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "4E71D92D"
										},
										{
											"begin": 195,
											"end": 717,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 195,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 195,
											"end": 717,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 195,
											"end": 717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 195,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "B46300EC"
										},
										{
											"begin": 195,
											"end": 717,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 195,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 195,
											"end": 717,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 195,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 195,
											"end": 717,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 195,
											"end": 717,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 195,
											"end": 717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 195,
											"end": 717,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 195,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 195,
											"end": 717,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 195,
											"end": 717,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 195,
											"end": 717,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 195,
											"end": 717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 195,
											"end": 717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 195,
											"end": 717,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 469,
											"end": 715,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 469,
											"end": 715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 469,
											"end": 715,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 469,
											"end": 715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 469,
											"end": 715,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 469,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 469,
											"end": 715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 469,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 469,
											"end": 715,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 469,
											"end": 715,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 469,
											"end": 715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 469,
											"end": 715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 469,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 469,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 469,
											"end": 715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 469,
											"end": 715,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 469,
											"end": 715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 469,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 715,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 469,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 469,
											"end": 715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 469,
											"end": 715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 469,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 469,
											"end": 715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 469,
											"end": 715,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 469,
											"end": 715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 469,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 715,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 469,
											"end": 715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 469,
											"end": 715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 469,
											"end": 715,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 469,
											"end": 715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 469,
											"end": 715,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 325,
											"end": 419,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 325,
											"end": 419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 325,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 325,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 325,
											"end": 419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 325,
											"end": 419,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 325,
											"end": 419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 325,
											"end": 419,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 469,
											"end": 715,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 469,
											"end": 715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 586,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 586,
											"end": 630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 528,
											"end": 540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 586,
											"end": 630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 586,
											"end": 630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 820,
											"end": 856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 820,
											"end": 856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 820,
											"end": 856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 503,
											"end": 515,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 503,
											"end": 515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 528,
											"end": 540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 528,
											"end": 540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 248,
											"end": 290,
											"name": "PUSH",
											"source": 0,
											"value": "D33C69361E00F01C3085AC77AB2FA13BE10376E8"
										},
										{
											"begin": 248,
											"end": 290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 793,
											"end": 811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 586,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 586,
											"end": 630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 586,
											"end": 630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 586,
											"end": 630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 586,
											"end": 630,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 586,
											"end": 630,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 586,
											"end": 630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 586,
											"end": 630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 586,
											"end": 630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 586,
											"end": 630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 586,
											"end": 630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 586,
											"end": 630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 586,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 586,
											"end": 630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 586,
											"end": 630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 586,
											"end": 630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 586,
											"end": 630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 586,
											"end": 630,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D0CB33D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 586,
											"end": 630,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 586,
											"end": 630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 586,
											"end": 630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 563,
											"end": 631,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 586,
											"end": 630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 563,
											"end": 631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 563,
											"end": 631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 631,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 563,
											"end": 631,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 631,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 563,
											"end": 631,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 563,
											"end": 631,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 563,
											"end": 631,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 563,
											"end": 631,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 563,
											"end": 631,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 631,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 563,
											"end": 631,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 563,
											"end": 631,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 563,
											"end": 631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 563,
											"end": 631,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 563,
											"end": 631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 563,
											"end": 631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 527,
											"end": 631,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 527,
											"end": 631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 527,
											"end": 631,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 527,
											"end": 631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 646,
											"end": 653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 641,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 641,
											"end": 688,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 669,
											"end": 677,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 669,
											"end": 677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 669,
											"end": 677,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 641,
											"end": 688,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 641,
											"end": 688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 704,
											"end": 708,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 469,
											"end": 715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 469,
											"end": 715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 325,
											"end": 419,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 325,
											"end": 419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 368,
											"end": 412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 248,
											"end": 290,
											"name": "PUSH",
											"source": 0,
											"value": "D33C69361E00F01C3085AC77AB2FA13BE10376E8"
										},
										{
											"begin": 248,
											"end": 290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 395,
											"end": 411,
											"name": "PUSH",
											"source": 0,
											"value": "38D7EA4C68000"
										},
										{
											"begin": 395,
											"end": 411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 395,
											"end": 411,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 248,
											"end": 290,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 368,
											"end": 412,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 412,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 368,
											"end": 412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 368,
											"end": 412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 325,
											"end": 419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 264,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 14,
											"end": 264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 123,
											"end": 129,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 120,
											"end": 121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 117,
											"end": 130,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 109,
											"end": 222,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 109,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 199,
											"end": 210,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 199,
											"end": 210,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 199,
											"end": 210,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 193,
											"end": 211,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 180,
											"end": 191,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 180,
											"end": 191,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 180,
											"end": 191,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 173,
											"end": 212,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 145,
											"end": 147,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 138,
											"end": 148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 109,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 109,
											"end": 222,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 256,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 238,
											"end": 254,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 231,
											"end": 258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14,
											"end": 264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 269,
											"end": 663,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 269,
											"end": 663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 405,
											"end": 414,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 398,
											"end": 419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 379,
											"end": 383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 448,
											"end": 454,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 442,
											"end": 455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 491,
											"end": 497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 486,
											"end": 488,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 475,
											"end": 484,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 471,
											"end": 489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 464,
											"end": 498,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 507,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 579,
											"end": 585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 574,
											"end": 576,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 563,
											"end": 572,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 559,
											"end": 577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 554,
											"end": 556,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 546,
											"end": 552,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 542,
											"end": 557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 507,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 507,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 507,
											"end": 586,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 507,
											"end": 586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 647,
											"end": 649,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 622,
											"end": 651,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 607,
											"end": 652,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 607,
											"end": 652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 652,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 607,
											"end": 652,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 656,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 657,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 603,
											"end": 657,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 269,
											"end": 663,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 269,
											"end": 663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 867,
											"end": 1154,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 867,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 996,
											"end": 999,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1040,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1041,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1109,
											"end": 1115,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1107,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1097,
											"end": 1101,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1089,
											"end": 1095,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1050,
											"end": 1116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1116,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1050,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1148,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1148,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1148,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 867,
											"end": 1154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 867,
											"end": 1154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"ClaimBack.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"claim()": "4e71d92d",
							"send()": "b46300ec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ClaimBack.sol\":\"ClaimBack\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ClaimBack.sol\":{\"keccak256\":\"0x612742f1c2cc65d9342f8b9091fd6eec2c866c3da54cff6032528060034e14da\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://39ebc1384cf01bc36aa88411d582fc102e2b7a6d8226ba3296df41bcb33819c5\",\"dweb:/ipfs/QmVG9uFh5gaRjL31dyAVFg57nPWsZjTCTmyZBy9RothbJh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ClaimBack.sol": {
				"ast": {
					"absolutePath": "ClaimBack.sol",
					"exportedSymbols": {
						"ClaimBack": [
							56
						]
					},
					"id": 57,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ClaimBack",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 56,
							"linearizedBaseContracts": [
								56
							],
							"name": "ClaimBack",
							"nameLocation": "204:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 4,
									"mutability": "constant",
									"name": "CONTRACT",
									"nameLocation": "237:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 56,
									"src": "220:70:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "220:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307864333343363933363165303066303143333038356163373761623266413133624531303337364538",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "248:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xd33C69361e00f01C3085ac77ab2fA13bE10376E8"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 7,
										"nodeType": "Block",
										"src": "317:2:0",
										"statements": []
									},
									"id": 8,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "307:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "317:0:0"
									},
									"scope": 56,
									"src": "296:23:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "358:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31303030303030303030303030303030",
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "395:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000_by_1",
																"typeString": "int_const 1000000000000000"
															},
															"value": "1000000000000000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000000000000000_by_1",
																"typeString": "int_const 1000000000000000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 13,
																	"name": "CONTRACT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4,
																	"src": "376:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 12,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "368:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 11,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "368:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "368:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "386:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "368:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "368:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "368:44:0"
											}
										]
									},
									"functionSelector": "b46300ec",
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "send",
									"nameLocation": "334:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "338:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "358:0:0"
									},
									"scope": 56,
									"src": "325:94:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "452:7:0",
										"statements": []
									},
									"id": 24,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "432:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "452:0:0"
									},
									"scope": 56,
									"src": "425:34:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 54,
										"nodeType": "Block",
										"src": "517:198:0",
										"statements": [
											{
												"assignments": [
													30,
													32
												],
												"declarations": [
													{
														"constant": false,
														"id": 30,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "533:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 54,
														"src": "528:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 29,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "528:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 32,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "555:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 54,
														"src": "542:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 31,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "542:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 44,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "636c61696e2875696e7432353629",
																	"id": 40,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "610:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9a19667a751d515ededccb8b194d87ce21b8c9056459b4be50ed059f1ae4960f",
																		"typeString": "literal_string \"clain(uint256)\""
																	},
																	"value": "clain(uint256)"
																},
																{
																	"hexValue": "30",
																	"id": 41,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "628:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9a19667a751d515ededccb8b194d87ce21b8c9056459b4be50ed059f1ae4960f",
																		"typeString": "literal_string \"clain(uint256)\""
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"expression": {
																	"id": 38,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "586:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "590:19:0",
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"src": "586:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "586:44:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 35,
																	"name": "CONTRACT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4,
																	"src": "571:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "563:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 33,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "563:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "563:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "581:4:0",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "563:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "563:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "527:104:0"
											},
											{
												"condition": {
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "645:8:0",
													"subExpression": {
														"id": 45,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "646:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 51,
												"nodeType": "IfStatement",
												"src": "641:47:0",
												"trueBody": {
													"id": 50,
													"nodeType": "Block",
													"src": "655:33:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "669:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "669:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 49,
															"nodeType": "ExpressionStatement",
															"src": "669:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 52,
													"name": "data",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 32,
													"src": "704:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 28,
												"id": 53,
												"nodeType": "Return",
												"src": "697:11:0"
											}
										]
									},
									"functionSelector": "4e71d92d",
									"id": 55,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "478:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "483:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "503:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 26,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "503:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:14:0"
									},
									"scope": 56,
									"src": "469:246:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 57,
							"src": "195:522:0",
							"usedErrors": []
						}
					],
					"src": "37:681:0"
				},
				"id": 0
			}
		}
	}
}