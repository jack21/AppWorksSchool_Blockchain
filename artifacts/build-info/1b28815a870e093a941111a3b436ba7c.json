{
	"id": "1b28815a870e093a941111a3b436ba7c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.16",
	"solcLongVersion": "0.8.16+commit.07a7930e",
	"input": {
		"language": "Solidity",
		"sources": {
			"MappingIteration.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity ^0.8.16;\n\ncontract MappingIteration {\n    mapping(address => uint) balances;\n    mapping(address => bool) exists;\n    address[] keys;\n\n    function set(address _key, uint _value) external {\n        balances[_key] = _value;\n        if (!exists[_key]) {\n            keys.push(_key);\n            exists[_key] = true;\n        }\n    }\n\n    function length() external view returns(uint) {\n        return keys.length;\n    }\n\n    function getKeys() external view returns(address[] memory) {\n        return keys;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"MappingIteration.sol": {
				"MappingIteration": {
					"abi": [
						{
							"inputs": [],
							"name": "getKeys",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "length",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_key",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MappingIteration.sol\":63:564  contract MappingIteration {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MappingIteration.sol\":63:564  contract MappingIteration {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1f7b6d32\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2150c518\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3825d828\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"MappingIteration.sol\":388:469  function length() external view returns(uint) {... */\n    tag_3:\n        /* \"MappingIteration.sol\":451:455  keys */\n      0x02\n        /* \"MappingIteration.sol\":451:462  keys.length */\n      sload\n        /* \"MappingIteration.sol\":388:469  function length() external view returns(uint) {... */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"MappingIteration.sol\":388:469  function length() external view returns(uint) {... */\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MappingIteration.sol\":475:562  function getKeys() external view returns(address[] memory) {... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n        /* \"MappingIteration.sol\":192:382  function set(address _key, uint _value) external {... */\n    tag_5:\n      tag_14\n      tag_15\n      calldatasize\n      0x04\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      stop\n        /* \"MappingIteration.sol\":475:562  function getKeys() external view returns(address[] memory) {... */\n    tag_11:\n        /* \"MappingIteration.sol\":516:532  address[] memory */\n      0x60\n        /* \"MappingIteration.sol\":551:555  keys */\n      0x02\n        /* \"MappingIteration.sol\":544:555  return keys */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_21:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_21\n      jumpi\n    tag_20:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"MappingIteration.sol\":475:562  function getKeys() external view returns(address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"MappingIteration.sol\":192:382  function set(address _key, uint _value) external {... */\n    tag_17:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MappingIteration.sol\":251:265  balances[_key] */\n      dup3\n      and\n        /* \"MappingIteration.sol\":251:259  balances */\n      0x00\n        /* \"MappingIteration.sol\":251:265  balances[_key] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"MappingIteration.sol\":251:274  balances[_key] = _value */\n      dup5\n      swap1\n      sstore\n        /* \"MappingIteration.sol\":289:295  exists */\n      0x01\n        /* \"MappingIteration.sol\":289:301  exists[_key] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"MappingIteration.sol\":284:376  if (!exists[_key]) {... */\n      tag_23\n      jumpi\n        /* \"MappingIteration.sol\":317:321  keys */\n      0x02\n        /* \"MappingIteration.sol\":317:332  keys.push(_key) */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      swap1\n      swap3\n      sstore\n      0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n      0x00\n        /* \"MappingIteration.sol\":346:358  exists[_key] */\n      swap1\n      dup2\n      mstore\n        /* \"MappingIteration.sol\":317:332  keys.push(_key) */\n      0x20\n        /* \"MappingIteration.sol\":346:358  exists[_key] */\n      dup3\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"MappingIteration.sol\":346:365  exists[_key] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"MappingIteration.sol\":284:376  if (!exists[_key]) {... */\n    tag_23:\n        /* \"MappingIteration.sol\":192:382  function set(address _key, uint _value) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:854   */\n    tag_13:\n        /* \"#utility.yul\":367:369   */\n      0x20\n        /* \"#utility.yul\":419:440   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":489:502   */\n      dup3\n      mload\n        /* \"#utility.yul\":392:410   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":511:533   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":338:342   */\n      0x00\n      swap2\n        /* \"#utility.yul\":367:369   */\n      swap1\n        /* \"#utility.yul\":590:605   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":564:566   */\n      0x40\n        /* \"#utility.yul\":549:567   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":338:342   */\n      dup5\n        /* \"#utility.yul\":633:828   */\n    tag_28:\n        /* \"#utility.yul\":647:653   */\n      dup2\n        /* \"#utility.yul\":644:645   */\n      dup2\n        /* \"#utility.yul\":641:654   */\n      lt\n        /* \"#utility.yul\":633:828   */\n      iszero\n      tag_30\n      jumpi\n        /* \"#utility.yul\":712:725   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":708:747   */\n      and\n        /* \"#utility.yul\":696:748   */\n      dup4\n      mstore\n        /* \"#utility.yul\":803:818   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":768:780   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":744:745   */\n      0x01\n        /* \"#utility.yul\":662:671   */\n      add\n        /* \"#utility.yul\":633:828   */\n      jump(tag_28)\n    tag_30:\n      pop\n        /* \"#utility.yul\":845:848   */\n      swap1\n      swap7\n        /* \"#utility.yul\":196:854   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":859:1213   */\n    tag_16:\n        /* \"#utility.yul\":927:933   */\n      0x00\n        /* \"#utility.yul\":935:941   */\n      dup1\n        /* \"#utility.yul\":988:990   */\n      0x40\n        /* \"#utility.yul\":976:985   */\n      dup4\n        /* \"#utility.yul\":967:974   */\n      dup6\n        /* \"#utility.yul\":963:986   */\n      sub\n        /* \"#utility.yul\":959:991   */\n      slt\n        /* \"#utility.yul\":956:1008   */\n      iszero\n      tag_32\n      jumpi\n        /* \"#utility.yul\":1004:1005   */\n      0x00\n        /* \"#utility.yul\":1001:1002   */\n      dup1\n        /* \"#utility.yul\":994:1006   */\n      revert\n        /* \"#utility.yul\":956:1008   */\n    tag_32:\n        /* \"#utility.yul\":1030:1053   */\n      dup3\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1082:1113   */\n      dup2\n      and\n        /* \"#utility.yul\":1072:1114   */\n      dup2\n      eq\n        /* \"#utility.yul\":1062:1132   */\n      tag_33\n      jumpi\n        /* \"#utility.yul\":1128:1129   */\n      0x00\n        /* \"#utility.yul\":1125:1126   */\n      dup1\n        /* \"#utility.yul\":1118:1130   */\n      revert\n        /* \"#utility.yul\":1062:1132   */\n    tag_33:\n        /* \"#utility.yul\":1151:1156   */\n      swap5\n        /* \"#utility.yul\":1203:1205   */\n      0x20\n        /* \"#utility.yul\":1188:1206   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1175:1207   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":859:1213   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a1dac6a1e10f4d9798efea9d3d6c4795095bb623a42edd17580b1c071bea10ae64736f6c63430008100033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610236806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631f7b6d32146100465780632150c5181461005c5780633825d82814610071575b600080fd5b6002546040519081526020015b60405180910390f35b610064610086565b604051610053919061017b565b61008461007f3660046101c8565b6100e8565b005b606060028054806020026020016040519081016040528092919081815260200182805480156100de57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116100c0575b5050505050905090565b6001600160a01b038216600090815260208181526040808320849055600190915290205460ff16610177576002805460018082019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0385169081179091556000908152602082905260409020805460ff191690911790555b5050565b6020808252825182820181905260009190848201906040850190845b818110156101bc5783516001600160a01b031683529284019291840191600101610197565b50909695505050505050565b600080604083850312156101db57600080fd5b82356001600160a01b03811681146101f257600080fd5b94602093909301359350505056fea2646970667358221220a1dac6a1e10f4d9798efea9d3d6c4795095bb623a42edd17580b1c071bea10ae64736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x236 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F7B6D32 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x2150C518 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x3825D828 EQ PUSH2 0x71 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH2 0x86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53 SWAP2 SWAP1 PUSH2 0x17B JUMP JUMPDEST PUSH2 0x84 PUSH2 0x7F CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8 JUMP JUMPDEST PUSH2 0xE8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xDE JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC0 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x177 JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1BC JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x197 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xDA 0xC6 LOG1 0xE1 0xF 0x4D SWAP8 SWAP9 0xEF 0xEA SWAP14 RETURNDATASIZE PUSH13 0x4795095BB623A42EDD17580B1C SMOD SHL 0xEA LT 0xAE PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ",
							"sourceMap": "63:501:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getKeys_62": {
									"entryPoint": 134,
									"id": 62,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@length_53": {
									"entryPoint": null,
									"id": 53,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@set_44": {
									"entryPoint": 232,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1215:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:507:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "357:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "367:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "361:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "378:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "396:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "407:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "392:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "392:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "382:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "426:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "437:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "419:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "419:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "419:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "449:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "460:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "453:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "475:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "495:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "489:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "489:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "479:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "526:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "511:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "511:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "511:22:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "542:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "553:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "564:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "549:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "549:18:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "542:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "576:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "594:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "602:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "590:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "590:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "580:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "614:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "623:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "618:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "682:146:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "703:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "718:6:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "712:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "712:13:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "735:3:1",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "740:1:1",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "731:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "731:11:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "744:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "727:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "727:19:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "708:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "708:39:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "696:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "696:52:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "696:52:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "761:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "772:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "777:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "768:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "768:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "761:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "793:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "807:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "815:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "803:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "803:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "793:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "644:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "647:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "641:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "641:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "655:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "657:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "666:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "669:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "662:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "662:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "657:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "637:3:1",
																"statements": []
															},
															"src": "633:195:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "837:11:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "845:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "837:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "316:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "327:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "338:4:1",
														"type": ""
													}
												],
												"src": "196:658:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "946:267:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "992:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1001:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1004:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "994:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "994:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "994:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "967:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "976:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "963:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "963:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "988:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "959:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "959:32:1"
															},
															"nodeType": "YulIf",
															"src": "956:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1017:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1043:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1030:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1030:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1021:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1116:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1125:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1128:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1118:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1118:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1118:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1075:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1086:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1101:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1106:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1097:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1097:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1110:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1093:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1093:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1082:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1082:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1065:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1065:50:1"
															},
															"nodeType": "YulIf",
															"src": "1062:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1141:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1151:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1141:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1165:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1192:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1203:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1188:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1188:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1175:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1175:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1165:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "904:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "915:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "927:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "935:6:1",
														"type": ""
													}
												],
												"src": "859:354:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80631f7b6d32146100465780632150c5181461005c5780633825d82814610071575b600080fd5b6002546040519081526020015b60405180910390f35b610064610086565b604051610053919061017b565b61008461007f3660046101c8565b6100e8565b005b606060028054806020026020016040519081016040528092919081815260200182805480156100de57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116100c0575b5050505050905090565b6001600160a01b038216600090815260208181526040808320849055600190915290205460ff16610177576002805460018082019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0385169081179091556000908152602082905260409020805460ff191690911790555b5050565b6020808252825182820181905260009190848201906040850190845b818110156101bc5783516001600160a01b031683529284019291840191600101610197565b50909695505050505050565b600080604083850312156101db57600080fd5b82356001600160a01b03811681146101f257600080fd5b94602093909301359350505056fea2646970667358221220a1dac6a1e10f4d9798efea9d3d6c4795095bb623a42edd17580b1c071bea10ae64736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F7B6D32 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x2150C518 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x3825D828 EQ PUSH2 0x71 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH2 0x86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53 SWAP2 SWAP1 PUSH2 0x17B JUMP JUMPDEST PUSH2 0x84 PUSH2 0x7F CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8 JUMP JUMPDEST PUSH2 0xE8 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xDE JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC0 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x177 JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1BC JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x197 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xDA 0xC6 LOG1 0xE1 0xF 0x4D SWAP8 SWAP9 0xEF 0xEA SWAP14 RETURNDATASIZE PUSH13 0x4795095BB623A42EDD17580B1C SMOD SHL 0xEA LT 0xAE PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ",
							"sourceMap": "63:501:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;388:81;451:4;:11;388:81;;160:25:1;;;148:2;133:18;388:81:0;;;;;;;;475:87;;;:::i;:::-;;;;;;;:::i;192:190::-;;;;;;:::i;:::-;;:::i;:::-;;475:87;516:16;551:4;544:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;544:11:0;;;;;;;;;;;;;;;;;;;;;;;475:87;:::o;192:190::-;-1:-1:-1;;;;;251:14:0;;:8;:14;;;;;;;;;;;:23;;;289:6;:12;;;;;;;;284:92;;317:4;:15;;;;;;;;;;;;;-1:-1:-1;;;;;;317:15:0;-1:-1:-1;;;;;317:15:0;;;;;;;;-1:-1:-1;346:12:0;;;317:15;346:12;;;;;;:19;;-1:-1:-1;;346:19:0;;;;;;284:92;192:190;;:::o;196:658:1:-;367:2;419:21;;;489:13;;392:18;;;511:22;;;338:4;;367:2;590:15;;;;564:2;549:18;;;338:4;633:195;647:6;644:1;641:13;633:195;;;712:13;;-1:-1:-1;;;;;708:39:1;696:52;;803:15;;;;768:12;;;;744:1;662:9;633:195;;;-1:-1:-1;845:3:1;;196:658;-1:-1:-1;;;;;;196:658:1:o;859:354::-;927:6;935;988:2;976:9;967:7;963:23;959:32;956:52;;;1004:1;1001;994:12;956:52;1030:23;;-1:-1:-1;;;;;1082:31:1;;1072:42;;1062:70;;1128:1;1125;1118:12;1062:70;1151:5;1203:2;1188:18;;;;1175:32;;-1:-1:-1;;;859:354:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "113200",
								"executionCost": "159",
								"totalCost": "113359"
							},
							"external": {
								"getKeys()": "infinite",
								"length()": "2247",
								"set(address,uint256)": "97479"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 564,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 63,
									"end": 564,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 63,
									"end": 564,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 63,
									"end": 564,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 63,
									"end": 564,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 564,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 63,
									"end": 564,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 564,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 63,
									"end": 564,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 564,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 564,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 63,
									"end": 564,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 564,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 63,
									"end": 564,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63,
									"end": 564,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 564,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 564,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 564,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 564,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 63,
									"end": 564,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 564,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a1dac6a1e10f4d9798efea9d3d6c4795095bb623a42edd17580b1c071bea10ae64736f6c63430008100033",
									".code": [
										{
											"begin": 63,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 63,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63,
											"end": 564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 564,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 564,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 63,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 564,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 564,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 63,
											"end": 564,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63,
											"end": 564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63,
											"end": 564,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 564,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 63,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 564,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 564,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 63,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 63,
											"end": 564,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 63,
											"end": 564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "1F7B6D32"
										},
										{
											"begin": 63,
											"end": 564,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 63,
											"end": 564,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "2150C518"
										},
										{
											"begin": 63,
											"end": 564,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63,
											"end": 564,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "3825D828"
										},
										{
											"begin": 63,
											"end": 564,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 63,
											"end": 564,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 564,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 564,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 388,
											"end": 469,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 388,
											"end": 469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 451,
											"end": 455,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 451,
											"end": 462,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 388,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 388,
											"end": 469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 469,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 388,
											"end": 469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 388,
											"end": 469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 388,
											"end": 469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 388,
											"end": 469,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 388,
											"end": 469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 469,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 475,
											"end": 562,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 475,
											"end": 562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 475,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 475,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 475,
											"end": 562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 475,
											"end": 562,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 475,
											"end": 562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 475,
											"end": 562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 475,
											"end": 562,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 475,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 475,
											"end": 562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 475,
											"end": 562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 475,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 475,
											"end": 562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 192,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 192,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 192,
											"end": 382,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 192,
											"end": 382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 192,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 192,
											"end": 382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 192,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 382,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 475,
											"end": 562,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 475,
											"end": 562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 516,
											"end": 532,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 551,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 544,
											"end": 555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 544,
											"end": 555,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 544,
											"end": 555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 544,
											"end": 555,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 544,
											"end": 555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 544,
											"end": 555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 544,
											"end": 555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 544,
											"end": 555,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 544,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 555,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 544,
											"end": 555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 544,
											"end": 555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 544,
											"end": 555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 544,
											"end": 555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 544,
											"end": 555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 544,
											"end": 555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 544,
											"end": 555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 475,
											"end": 562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 475,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 192,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 251,
											"end": 265,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 251,
											"end": 265,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 251,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 251,
											"end": 265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 251,
											"end": 265,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 251,
											"end": 265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 251,
											"end": 265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 251,
											"end": 265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 251,
											"end": 265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 265,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 251,
											"end": 265,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 251,
											"end": 274,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 251,
											"end": 274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 274,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 289,
											"end": 295,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 289,
											"end": 301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 289,
											"end": 301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 289,
											"end": 301,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 289,
											"end": 301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 289,
											"end": 301,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 289,
											"end": 301,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 289,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 289,
											"end": 301,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 284,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 284,
											"end": 376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 317,
											"end": 321,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 317,
											"end": 332,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 317,
											"end": 332,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "PUSH",
											"source": 0,
											"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
										},
										{
											"begin": 317,
											"end": 332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 317,
											"end": 332,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 317,
											"end": 332,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 346,
											"end": 358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 346,
											"end": 358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 346,
											"end": 358,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 346,
											"end": 358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 346,
											"end": 358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 346,
											"end": 358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 358,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 346,
											"end": 365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 365,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 346,
											"end": 365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 346,
											"end": 365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 346,
											"end": 365,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 346,
											"end": 365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 365,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 284,
											"end": 376,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 284,
											"end": 376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 196,
											"end": 854,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 196,
											"end": 854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 367,
											"end": 369,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 419,
											"end": 440,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 419,
											"end": 440,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 419,
											"end": 440,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 489,
											"end": 502,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 489,
											"end": 502,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 392,
											"end": 410,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 392,
											"end": 410,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 392,
											"end": 410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 511,
											"end": 533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 511,
											"end": 533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 511,
											"end": 533,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 338,
											"end": 342,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 342,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 367,
											"end": 369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 590,
											"end": 605,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 590,
											"end": 605,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 590,
											"end": 605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 590,
											"end": 605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 564,
											"end": 566,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 549,
											"end": 567,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 549,
											"end": 567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 549,
											"end": 567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 338,
											"end": 342,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 633,
											"end": 828,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 633,
											"end": 828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 647,
											"end": 653,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 644,
											"end": 645,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 654,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 633,
											"end": 828,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 633,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 633,
											"end": 828,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 712,
											"end": 725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 712,
											"end": 725,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 708,
											"end": 747,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 696,
											"end": 748,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 696,
											"end": 748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 803,
											"end": 818,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 803,
											"end": 818,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 803,
											"end": 818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 803,
											"end": 818,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 768,
											"end": 780,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 768,
											"end": 780,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 768,
											"end": 780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 768,
											"end": 780,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 744,
											"end": 745,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 662,
											"end": 671,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 633,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 633,
											"end": 828,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 633,
											"end": 828,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 633,
											"end": 828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 845,
											"end": 848,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 848,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 196,
											"end": 854,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 196,
											"end": 854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 859,
											"end": 1213,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 859,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 927,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 941,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 988,
											"end": 990,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 976,
											"end": 985,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 967,
											"end": 974,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 963,
											"end": 986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 959,
											"end": 991,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 956,
											"end": 1008,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 956,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 956,
											"end": 1008,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1002,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 994,
											"end": 1006,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 956,
											"end": 1008,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 956,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1053,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1053,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1082,
											"end": 1113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1113,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1114,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1114,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1062,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1062,
											"end": 1132,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1129,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1125,
											"end": 1126,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1130,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1062,
											"end": 1132,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1062,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1205,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1206,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1206,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1188,
											"end": 1206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1207,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1207,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 859,
											"end": 1213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"MappingIteration.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getKeys()": "2150c518",
							"length()": "1f7b6d32",
							"set(address,uint256)": "3825d828"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getKeys\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"length\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_key\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MappingIteration.sol\":\"MappingIteration\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MappingIteration.sol\":{\"keccak256\":\"0x1f1a1e758ab3dec2c86a949f3ab0d7e7ec0cd5ce3820fdff8a17d91f28e787b1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a2228558e6972579fae03383ffd4ca8952cf3d5933563a779e69cbf44de7cf5f\",\"dweb:/ipfs/QmPJUrfmqSe9Bps7w1Lt9auVbwtzqSKY5dfMb8ghxwYmhr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "MappingIteration.sol:MappingIteration",
								"label": "balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 9,
								"contract": "MappingIteration.sol:MappingIteration",
								"label": "exists",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 12,
								"contract": "MappingIteration.sol:MappingIteration",
								"label": "keys",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"MappingIteration.sol": {
				"ast": {
					"absolutePath": "MappingIteration.sol",
					"exportedSymbols": {
						"MappingIteration": [
							63
						]
					},
					"id": 64,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MappingIteration",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 63,
							"linearizedBaseContracts": [
								63
							],
							"name": "MappingIteration",
							"nameLocation": "72:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "120:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 63,
									"src": "95:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "103:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "95:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 3,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "114:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "exists",
									"nameLocation": "159:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 63,
									"src": "134:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 8,
										"keyType": {
											"id": 6,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "142:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "134:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 7,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "153:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "keys",
									"nameLocation": "181:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 63,
									"src": "171:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 10,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "171:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 11,
										"nodeType": "ArrayTypeName",
										"src": "171:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "241:141:0",
										"statements": [
											{
												"expression": {
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 19,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "251:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 21,
														"indexExpression": {
															"id": 20,
															"name": "_key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "260:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "251:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 22,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "268:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "251:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "251:23:0"
											},
											{
												"condition": {
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "288:13:0",
													"subExpression": {
														"baseExpression": {
															"id": 25,
															"name": "exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "289:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 27,
														"indexExpression": {
															"id": 26,
															"name": "_key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "296:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "289:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 42,
												"nodeType": "IfStatement",
												"src": "284:92:0",
												"trueBody": {
													"id": 41,
													"nodeType": "Block",
													"src": "303:73:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 32,
																		"name": "_key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 14,
																		"src": "327:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 29,
																		"name": "keys",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 12,
																		"src": "317:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "322:4:0",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "317:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "317:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 34,
															"nodeType": "ExpressionStatement",
															"src": "317:15:0"
														},
														{
															"expression": {
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 35,
																		"name": "exists",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "346:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 37,
																	"indexExpression": {
																		"id": 36,
																		"name": "_key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 14,
																		"src": "353:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "346:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 38,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "361:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "346:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 40,
															"nodeType": "ExpressionStatement",
															"src": "346:19:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "3825d828",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "201:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "213:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "205:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "205:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "224:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "219:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "219:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "204:27:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "241:0:0"
									},
									"scope": 63,
									"src": "192:190:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "434:35:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 49,
														"name": "keys",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "451:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "456:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "451:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 48,
												"id": 51,
												"nodeType": "Return",
												"src": "444:18:0"
											}
										]
									},
									"functionSelector": "1f7b6d32",
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "397:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "403:2:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "428:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "428:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "427:6:0"
									},
									"scope": 63,
									"src": "388:81:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "534:28:0",
										"statements": [
											{
												"expression": {
													"id": 59,
													"name": "keys",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 12,
													"src": "551:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 58,
												"id": 60,
												"nodeType": "Return",
												"src": "544:11:0"
											}
										]
									},
									"functionSelector": "2150c518",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getKeys",
									"nameLocation": "484:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "491:2:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "516:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 55,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "516:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 56,
													"nodeType": "ArrayTypeName",
													"src": "516:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "515:18:0"
									},
									"scope": 63,
									"src": "475:87:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 64,
							"src": "63:501:0",
							"usedErrors": []
						}
					],
					"src": "37:528:0"
				},
				"id": 0
			}
		}
	}
}