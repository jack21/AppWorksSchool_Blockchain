{
	"id": "c73a96c7fa4d82fa2b14ad15e9c1ad49",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.16",
	"solcLongVersion": "0.8.16+commit.07a7930e",
	"input": {
		"language": "Solidity",
		"sources": {
			"MappingIteration.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity ^0.8.16;\n\ncontract MappingIteration {\n    mapping(address => uint) balances;\n    mapping(address => bool) exists;\n    address[] keys;\n\n    function set(address _key, uint _value) external {\n        balances[_key] = _value;\n        if (!exists[_key]) {\n            keys.push(_key);\n            exists[_key] = true;\n        }\n    }\n\n    function length() external view returns(uint) {\n        return keys.length;\n    }\n\n    function first() external view returns(uint) {\n        require(keys.length > 0);\n        return balances[keys[0]];\n    }\n\n    function last() external view returns(uint) {\n        if (keys.length == 0) {\n            return 0;\n        }\n        return balances[keys[keys.length - 1]];\n    }\n\n    function get(uint _index) external view returns(uint) {\n        return balances[keys[_index]];\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"MappingIteration.sol": {
				"MappingIteration": {
					"abi": [
						{
							"inputs": [],
							"name": "first",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "get",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "last",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "length",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_key",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MappingIteration.sol\":63:872  contract MappingIteration {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MappingIteration.sol\":63:872  contract MappingIteration {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1f7b6d32\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3825d828\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3df4ddf4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x47799da8\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x9507d39a\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"MappingIteration.sol\":388:469  function length() external view returns(uint) {... */\n    tag_3:\n        /* \"MappingIteration.sol\":451:455  keys */\n      0x02\n        /* \"MappingIteration.sol\":451:462  keys.length */\n      sload\n        /* \"MappingIteration.sol\":388:469  function length() external view returns(uint) {... */\n    tag_8:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"MappingIteration.sol\":388:469  function length() external view returns(uint) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MappingIteration.sol\":192:382  function set(address _key, uint _value) external {... */\n    tag_4:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"MappingIteration.sol\":475:595  function first() external view returns(uint) {... */\n    tag_5:\n      tag_8\n      tag_17\n      jump\t// in\n        /* \"MappingIteration.sol\":601:764  function last() external view returns(uint) {... */\n    tag_6:\n      tag_8\n      tag_20\n      jump\t// in\n        /* \"MappingIteration.sol\":770:870  function get(uint _index) external view returns(uint) {... */\n    tag_7:\n      tag_8\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n        /* \"MappingIteration.sol\":192:382  function set(address _key, uint _value) external {... */\n    tag_15:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MappingIteration.sol\":251:265  balances[_key] */\n      dup3\n      and\n        /* \"MappingIteration.sol\":251:259  balances */\n      0x00\n        /* \"MappingIteration.sol\":251:265  balances[_key] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"MappingIteration.sol\":251:274  balances[_key] = _value */\n      dup5\n      swap1\n      sstore\n        /* \"MappingIteration.sol\":289:295  exists */\n      0x01\n        /* \"MappingIteration.sol\":289:301  exists[_key] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"MappingIteration.sol\":284:376  if (!exists[_key]) {... */\n      tag_29\n      jumpi\n        /* \"MappingIteration.sol\":317:321  keys */\n      0x02\n        /* \"MappingIteration.sol\":317:332  keys.push(_key) */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      swap1\n      swap3\n      sstore\n      0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n      0x00\n        /* \"MappingIteration.sol\":346:358  exists[_key] */\n      swap1\n      dup2\n      mstore\n        /* \"MappingIteration.sol\":317:332  keys.push(_key) */\n      0x20\n        /* \"MappingIteration.sol\":346:358  exists[_key] */\n      dup3\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"MappingIteration.sol\":346:365  exists[_key] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"MappingIteration.sol\":284:376  if (!exists[_key]) {... */\n    tag_29:\n        /* \"MappingIteration.sol\":192:382  function set(address _key, uint _value) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MappingIteration.sol\":475:595  function first() external view returns(uint) {... */\n    tag_17:\n        /* \"MappingIteration.sol\":538:542  keys */\n      0x02\n        /* \"MappingIteration.sol\":538:549  keys.length */\n      sload\n        /* \"MappingIteration.sol\":514:518  uint */\n      0x00\n      swap1\n        /* \"MappingIteration.sol\":530:554  require(keys.length > 0) */\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n        /* \"MappingIteration.sol\":571:579  balances */\n      0x00\n        /* \"MappingIteration.sol\":571:588  balances[keys[0]] */\n      dup1\n        /* \"MappingIteration.sol\":580:584  keys */\n      0x02\n        /* \"MappingIteration.sol\":585:586  0 */\n      0x00\n        /* \"MappingIteration.sol\":580:587  keys[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_34\n      jumpi\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"MappingIteration.sol\":571:588  balances[keys[0]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"MappingIteration.sol\":475:595  function first() external view returns(uint) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"MappingIteration.sol\":601:764  function last() external view returns(uint) {... */\n    tag_20:\n        /* \"MappingIteration.sol\":659:663  keys */\n      0x02\n        /* \"MappingIteration.sol\":659:670  keys.length */\n      sload\n        /* \"MappingIteration.sol\":639:643  uint */\n      0x00\n      swap1\n        /* \"MappingIteration.sol\":659:675  keys.length == 0 */\n      dup2\n      sub\n        /* \"MappingIteration.sol\":655:710  if (keys.length == 0) {... */\n      tag_38\n      jumpi\n      pop\n        /* \"MappingIteration.sol\":698:699  0 */\n      0x00\n      swap1\n        /* \"MappingIteration.sol\":601:764  function last() external view returns(uint) {... */\n      jump\t// out\n        /* \"MappingIteration.sol\":655:710  if (keys.length == 0) {... */\n    tag_38:\n        /* \"MappingIteration.sol\":735:739  keys */\n      0x02\n        /* \"MappingIteration.sol\":740:751  keys.length */\n      dup1\n      sload\n        /* \"MappingIteration.sol\":726:734  balances */\n      0x00\n      swap2\n      dup3\n      swap2\n        /* \"MappingIteration.sol\":740:755  keys.length - 1 */\n      tag_39\n      swap1\n        /* \"MappingIteration.sol\":754:755  1 */\n      0x01\n      swap1\n        /* \"MappingIteration.sol\":740:755  keys.length - 1 */\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"MappingIteration.sol\":735:756  keys[keys.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_34\n      jumpi\n      tag_34\n      tag_35\n      jump\t// in\n        /* \"MappingIteration.sol\":770:870  function get(uint _index) external view returns(uint) {... */\n    tag_25:\n        /* \"MappingIteration.sol\":818:822  uint */\n      0x00\n        /* \"MappingIteration.sol\":841:849  balances */\n      dup1\n        /* \"MappingIteration.sol\":841:863  balances[keys[_index]] */\n      0x00\n        /* \"MappingIteration.sol\":850:854  keys */\n      0x02\n        /* \"MappingIteration.sol\":855:861  _index */\n      dup5\n        /* \"MappingIteration.sol\":850:862  keys[_index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_46\n      jumpi\n      tag_46\n      tag_35\n      jump\t// in\n    tag_46:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"MappingIteration.sol\":841:863  balances[keys[_index]] */\n      dup4\n      mstore\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      swap1\n      keccak256\n      sload\n      swap3\n        /* \"MappingIteration.sol\":770:870  function get(uint _index) external view returns(uint) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:550   */\n    tag_14:\n        /* \"#utility.yul\":264:270   */\n      0x00\n        /* \"#utility.yul\":272:278   */\n      dup1\n        /* \"#utility.yul\":325:327   */\n      0x40\n        /* \"#utility.yul\":313:322   */\n      dup4\n        /* \"#utility.yul\":304:311   */\n      dup6\n        /* \"#utility.yul\":300:323   */\n      sub\n        /* \"#utility.yul\":296:328   */\n      slt\n        /* \"#utility.yul\":293:345   */\n      iszero\n      tag_51\n      jumpi\n        /* \"#utility.yul\":341:342   */\n      0x00\n        /* \"#utility.yul\":338:339   */\n      dup1\n        /* \"#utility.yul\":331:343   */\n      revert\n        /* \"#utility.yul\":293:345   */\n    tag_51:\n        /* \"#utility.yul\":367:390   */\n      dup3\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":419:450   */\n      dup2\n      and\n        /* \"#utility.yul\":409:451   */\n      dup2\n      eq\n        /* \"#utility.yul\":399:469   */\n      tag_52\n      jumpi\n        /* \"#utility.yul\":465:466   */\n      0x00\n        /* \"#utility.yul\":462:463   */\n      dup1\n        /* \"#utility.yul\":455:467   */\n      revert\n        /* \"#utility.yul\":399:469   */\n    tag_52:\n        /* \"#utility.yul\":488:493   */\n      swap5\n        /* \"#utility.yul\":540:542   */\n      0x20\n        /* \"#utility.yul\":525:543   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":512:544   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":196:550   */\n      jump\t// out\n        /* \"#utility.yul\":555:735   */\n    tag_24:\n        /* \"#utility.yul\":614:620   */\n      0x00\n        /* \"#utility.yul\":667:669   */\n      0x20\n        /* \"#utility.yul\":655:664   */\n      dup3\n        /* \"#utility.yul\":646:653   */\n      dup5\n        /* \"#utility.yul\":642:665   */\n      sub\n        /* \"#utility.yul\":638:670   */\n      slt\n        /* \"#utility.yul\":635:687   */\n      iszero\n      tag_54\n      jumpi\n        /* \"#utility.yul\":683:684   */\n      0x00\n        /* \"#utility.yul\":680:681   */\n      dup1\n        /* \"#utility.yul\":673:685   */\n      revert\n        /* \"#utility.yul\":635:687   */\n    tag_54:\n      pop\n        /* \"#utility.yul\":706:729   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":555:735   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":740:867   */\n    tag_35:\n        /* \"#utility.yul\":801:811   */\n      0x4e487b71\n        /* \"#utility.yul\":796:799   */\n      0xe0\n        /* \"#utility.yul\":792:812   */\n      shl\n        /* \"#utility.yul\":789:790   */\n      0x00\n        /* \"#utility.yul\":782:813   */\n      mstore\n        /* \"#utility.yul\":832:836   */\n      0x32\n        /* \"#utility.yul\":829:830   */\n      0x04\n        /* \"#utility.yul\":822:837   */\n      mstore\n        /* \"#utility.yul\":856:860   */\n      0x24\n        /* \"#utility.yul\":853:854   */\n      0x00\n        /* \"#utility.yul\":846:861   */\n      revert\n        /* \"#utility.yul\":872:1097   */\n    tag_40:\n        /* \"#utility.yul\":939:948   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":960:971   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":957:1091   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":1013:1023   */\n      0x4e487b71\n        /* \"#utility.yul\":1008:1011   */\n      0xe0\n        /* \"#utility.yul\":1004:1024   */\n      shl\n        /* \"#utility.yul\":1001:1002   */\n      0x00\n        /* \"#utility.yul\":994:1025   */\n      mstore\n        /* \"#utility.yul\":1048:1052   */\n      0x11\n        /* \"#utility.yul\":1045:1046   */\n      0x04\n        /* \"#utility.yul\":1038:1053   */\n      mstore\n        /* \"#utility.yul\":1076:1080   */\n      0x24\n        /* \"#utility.yul\":1073:1074   */\n      0x00\n        /* \"#utility.yul\":1066:1081   */\n      revert\n        /* \"#utility.yul\":957:1091   */\n    tag_57:\n        /* \"#utility.yul\":872:1097   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204947bd9788bddb02854dc2b7e8e06ba40a2f5478e46d9afec0e635357c636b2664736f6c63430008100033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506102cb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631f7b6d321461005c5780633825d828146100725780633df4ddf41461008757806347799da81461008f5780639507d39a14610097575b600080fd5b6002545b60405190815260200160405180910390f35b610085610080366004610207565b6100aa565b005b61006061013d565b61006061018d565b6100606100a536600461023f565b6101c4565b6001600160a01b038216600090815260208181526040808320849055600190915290205460ff16610139576002805460018082019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0385169081179091556000908152602082905260409020805460ff191690911790555b5050565b60025460009061014c57600080fd5b600080600260008154811061016357610163610258565b60009182526020808320909101546001600160a01b03168352820192909252604001902054919050565b600254600090810361019f5750600090565b6002805460009182916101b49060019061026e565b8154811061016357610163610258565b6000806000600284815481106101dc576101dc610258565b60009182526020808320909101546001600160a01b0316835282019290925260400190205492915050565b6000806040838503121561021a57600080fd5b82356001600160a01b038116811461023157600080fd5b946020939093013593505050565b60006020828403121561025157600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b8181038181111561028f57634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212204947bd9788bddb02854dc2b7e8e06ba40a2f5478e46d9afec0e635357c636b2664736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F7B6D32 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x3825D828 EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0x3DF4DDF4 EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0x47799DA8 EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0x9507D39A EQ PUSH2 0x97 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH2 0x80 CALLDATASIZE PUSH1 0x4 PUSH2 0x207 JUMP JUMPDEST PUSH2 0xAA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60 PUSH2 0x13D JUMP JUMPDEST PUSH2 0x60 PUSH2 0x18D JUMP JUMPDEST PUSH2 0x60 PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x23F JUMP JUMPDEST PUSH2 0x1C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x139 JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x163 JUMPI PUSH2 0x163 PUSH2 0x258 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 SUB PUSH2 0x19F JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH2 0x1B4 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x26E JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x163 JUMPI PUSH2 0x163 PUSH2 0x258 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1DC JUMPI PUSH2 0x1DC PUSH2 0x258 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x28F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 SELFBALANCE 0xBD SWAP8 DUP9 0xBD 0xDB MUL DUP6 0x4D 0xC2 0xB7 0xE8 0xE0 PUSH12 0xA40A2F5478E46D9AFEC0E635 CALLDATALOAD PUSH29 0x636B2664736F6C63430008100033000000000000000000000000000000 ",
							"sourceMap": "63:809:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@first_72": {
									"entryPoint": 317,
									"id": 72,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@get_109": {
									"entryPoint": 452,
									"id": 109,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@last_95": {
									"entryPoint": 397,
									"id": 95,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@length_53": {
									"entryPoint": null,
									"id": 53,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@set_44": {
									"entryPoint": 170,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 600,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1099:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "283:267:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "329:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "338:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "341:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "331:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "331:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "304:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "313:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "300:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "300:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "325:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "296:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "296:32:1"
															},
															"nodeType": "YulIf",
															"src": "293:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "354:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "380:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "367:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "367:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "358:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "453:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "462:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "465:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "455:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "455:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "455:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "412:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "423:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "438:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "443:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "434:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "434:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "447:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "430:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "430:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "419:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "419:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "409:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "409:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "402:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "402:50:1"
															},
															"nodeType": "YulIf",
															"src": "399:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "478:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "488:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "478:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "502:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "529:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "540:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "525:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "525:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "512:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "512:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "502:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "241:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "252:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "264:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "272:6:1",
														"type": ""
													}
												],
												"src": "196:354:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "625:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "671:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "683:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "673:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "673:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "673:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "646:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "655:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "642:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "642:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "667:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "638:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "638:32:1"
															},
															"nodeType": "YulIf",
															"src": "635:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "696:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "719:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "706:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "706:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "696:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "591:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "602:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "614:6:1",
														"type": ""
													}
												],
												"src": "555:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "772:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "789:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "796:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "801:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "792:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "792:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "782:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "782:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "782:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "829:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "832:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "822:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "822:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "822:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "853:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "856:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "846:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "846:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "846:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "740:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "921:176:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "931:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "943:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "946:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "939:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "939:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "931:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "980:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1001:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1008:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1013:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1004:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1004:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "994:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "994:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "994:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1045:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1048:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1038:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1038:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1038:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1073:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1076:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1066:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1066:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1066:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "963:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "969:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "960:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "960:11:1"
															},
															"nodeType": "YulIf",
															"src": "957:134:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "903:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "906:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "912:4:1",
														"type": ""
													}
												],
												"src": "872:225:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80631f7b6d321461005c5780633825d828146100725780633df4ddf41461008757806347799da81461008f5780639507d39a14610097575b600080fd5b6002545b60405190815260200160405180910390f35b610085610080366004610207565b6100aa565b005b61006061013d565b61006061018d565b6100606100a536600461023f565b6101c4565b6001600160a01b038216600090815260208181526040808320849055600190915290205460ff16610139576002805460018082019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0385169081179091556000908152602082905260409020805460ff191690911790555b5050565b60025460009061014c57600080fd5b600080600260008154811061016357610163610258565b60009182526020808320909101546001600160a01b03168352820192909252604001902054919050565b600254600090810361019f5750600090565b6002805460009182916101b49060019061026e565b8154811061016357610163610258565b6000806000600284815481106101dc576101dc610258565b60009182526020808320909101546001600160a01b0316835282019290925260400190205492915050565b6000806040838503121561021a57600080fd5b82356001600160a01b038116811461023157600080fd5b946020939093013593505050565b60006020828403121561025157600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b8181038181111561028f57634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212204947bd9788bddb02854dc2b7e8e06ba40a2f5478e46d9afec0e635357c636b2664736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F7B6D32 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x3825D828 EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0x3DF4DDF4 EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0x47799DA8 EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0x9507D39A EQ PUSH2 0x97 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH2 0x80 CALLDATASIZE PUSH1 0x4 PUSH2 0x207 JUMP JUMPDEST PUSH2 0xAA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60 PUSH2 0x13D JUMP JUMPDEST PUSH2 0x60 PUSH2 0x18D JUMP JUMPDEST PUSH2 0x60 PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0x23F JUMP JUMPDEST PUSH2 0x1C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x139 JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x163 JUMPI PUSH2 0x163 PUSH2 0x258 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 SUB PUSH2 0x19F JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH2 0x1B4 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x26E JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x163 JUMPI PUSH2 0x163 PUSH2 0x258 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1DC JUMPI PUSH2 0x1DC PUSH2 0x258 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x28F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 SELFBALANCE 0xBD SWAP8 DUP9 0xBD 0xDB MUL DUP6 0x4D 0xC2 0xB7 0xE8 0xE0 PUSH12 0xA40A2F5478E46D9AFEC0E635 CALLDATALOAD PUSH29 0x636B2664736F6C63430008100033000000000000000000000000000000 ",
							"sourceMap": "63:809:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;388:81;451:4;:11;388:81;;;160:25:1;;;148:2;133:18;388:81:0;;;;;;;192:190;;;;;;:::i;:::-;;:::i;:::-;;475:120;;;:::i;601:163::-;;;:::i;770:100::-;;;;;;:::i;:::-;;:::i;192:190::-;-1:-1:-1;;;;;251:14:0;;:8;:14;;;;;;;;;;;:23;;;289:6;:12;;;;;;;;284:92;;317:4;:15;;;;;;;;;;;;;-1:-1:-1;;;;;;317:15:0;-1:-1:-1;;;;;317:15:0;;;;;;;;-1:-1:-1;346:12:0;;;317:15;346:12;;;;;;:19;;-1:-1:-1;;346:19:0;;;;;;284:92;192:190;;:::o;475:120::-;538:4;:11;514:4;;530:24;;;;;;571:8;:17;580:4;585:1;580:7;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;580:7:0;571:17;;;;;;;;;;;;;;475:120;-1:-1:-1;475:120:0:o;601:163::-;659:4;:11;639:4;;659:16;;655:55;;-1:-1:-1;698:1:0;;601:163::o;655:55::-;735:4;740:11;;726:8;;;;740:15;;754:1;;740:15;:::i;:::-;735:21;;;;;;;;:::i;770:100::-;818:4;841:8;:22;850:4;855:6;850:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;850:12:0;841:22;;;;;;;;;;;;;;770:100;-1:-1:-1;;770:100:0:o;196:354:1:-;264:6;272;325:2;313:9;304:7;300:23;296:32;293:52;;;341:1;338;331:12;293:52;367:23;;-1:-1:-1;;;;;419:31:1;;409:42;;399:70;;465:1;462;455:12;399:70;488:5;540:2;525:18;;;;512:32;;-1:-1:-1;;;196:354:1:o;555:180::-;614:6;667:2;655:9;646:7;642:23;638:32;635:52;;;683:1;680;673:12;635:52;-1:-1:-1;706:23:1;;555:180;-1:-1:-1;555:180:1:o;740:127::-;801:10;796:3;792:20;789:1;782:31;832:4;829:1;822:15;856:4;853:1;846:15;872:225;939:9;;;960:11;;;957:134;;;1013:10;1008:3;1004:20;1001:1;994:31;1048:4;1045:1;1038:15;1076:4;1073:1;1066:15;957:134;872:225;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "143000",
								"executionCost": "190",
								"totalCost": "143190"
							},
							"external": {
								"first()": "8836",
								"get(uint256)": "6839",
								"last()": "11048",
								"length()": "2247",
								"set(address,uint256)": "97457"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 872,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 63,
									"end": 872,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 63,
									"end": 872,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 63,
									"end": 872,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 63,
									"end": 872,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 872,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 63,
									"end": 872,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 872,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 63,
									"end": 872,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 872,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 872,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 63,
									"end": 872,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 872,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 63,
									"end": 872,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63,
									"end": 872,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 872,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 872,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 872,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 872,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 63,
									"end": 872,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 872,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204947bd9788bddb02854dc2b7e8e06ba40a2f5478e46d9afec0e635357c636b2664736f6c63430008100033",
									".code": [
										{
											"begin": 63,
											"end": 872,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 63,
											"end": 872,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63,
											"end": 872,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 872,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63,
											"end": 872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63,
											"end": 872,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 872,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 872,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 63,
											"end": 872,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "PUSH",
											"source": 0,
											"value": "1F7B6D32"
										},
										{
											"begin": 63,
											"end": 872,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 63,
											"end": 872,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "PUSH",
											"source": 0,
											"value": "3825D828"
										},
										{
											"begin": 63,
											"end": 872,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63,
											"end": 872,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "PUSH",
											"source": 0,
											"value": "3DF4DDF4"
										},
										{
											"begin": 63,
											"end": 872,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 63,
											"end": 872,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "PUSH",
											"source": 0,
											"value": "47799DA8"
										},
										{
											"begin": 63,
											"end": 872,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 63,
											"end": 872,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "PUSH",
											"source": 0,
											"value": "9507D39A"
										},
										{
											"begin": 63,
											"end": 872,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 63,
											"end": 872,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63,
											"end": 872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 872,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 388,
											"end": 469,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 388,
											"end": 469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 451,
											"end": 455,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 451,
											"end": 462,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 388,
											"end": 469,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 388,
											"end": 469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 388,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 388,
											"end": 469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 388,
											"end": 469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 388,
											"end": 469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 388,
											"end": 469,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 388,
											"end": 469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 388,
											"end": 469,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 192,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 192,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 192,
											"end": 382,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 192,
											"end": 382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 192,
											"end": 382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 192,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 192,
											"end": 382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 192,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 382,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 475,
											"end": 595,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 475,
											"end": 595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 475,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 475,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 475,
											"end": 595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 601,
											"end": 764,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 601,
											"end": 764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 601,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 601,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 601,
											"end": 764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 770,
											"end": 870,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 770,
											"end": 870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 770,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 770,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 770,
											"end": 870,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 770,
											"end": 870,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 770,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 770,
											"end": 870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 770,
											"end": 870,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 770,
											"end": 870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 770,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 770,
											"end": 870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 382,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 192,
											"end": 382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 251,
											"end": 265,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 251,
											"end": 265,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 251,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 251,
											"end": 265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 251,
											"end": 265,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 251,
											"end": 265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 251,
											"end": 265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 251,
											"end": 265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 251,
											"end": 265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 265,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 251,
											"end": 265,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 251,
											"end": 274,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 251,
											"end": 274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 274,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 289,
											"end": 295,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 289,
											"end": 301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 289,
											"end": 301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 289,
											"end": 301,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 289,
											"end": 301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 289,
											"end": 301,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 289,
											"end": 301,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 289,
											"end": 301,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 289,
											"end": 301,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 284,
											"end": 376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 284,
											"end": 376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 317,
											"end": 321,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 317,
											"end": 332,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 317,
											"end": 332,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "PUSH",
											"source": 0,
											"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
										},
										{
											"begin": 317,
											"end": 332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 317,
											"end": 332,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 317,
											"end": 332,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 346,
											"end": 358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 346,
											"end": 358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 317,
											"end": 332,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 346,
											"end": 358,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 346,
											"end": 358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 346,
											"end": 358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 346,
											"end": 358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 358,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 346,
											"end": 365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 365,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 346,
											"end": 365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 346,
											"end": 365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 346,
											"end": 365,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 346,
											"end": 365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 365,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 284,
											"end": 376,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 284,
											"end": 376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 192,
											"end": 382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 192,
											"end": 382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 475,
											"end": 595,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 475,
											"end": 595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 538,
											"end": 542,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 538,
											"end": 549,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 514,
											"end": 518,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 514,
											"end": 518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 530,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 530,
											"end": 554,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 530,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 530,
											"end": 554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 530,
											"end": 554,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 530,
											"end": 554,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 530,
											"end": 554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 571,
											"end": 579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 580,
											"end": 584,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 585,
											"end": 586,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 580,
											"end": 587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 580,
											"end": 587,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 580,
											"end": 587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 580,
											"end": 587,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 580,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 580,
											"end": 587,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 580,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 580,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 580,
											"end": 587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 580,
											"end": 587,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 580,
											"end": 587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 580,
											"end": 587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 580,
											"end": 587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 580,
											"end": 587,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 580,
											"end": 587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 580,
											"end": 587,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 580,
											"end": 587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 580,
											"end": 587,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 580,
											"end": 587,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 580,
											"end": 587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 580,
											"end": 587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 580,
											"end": 587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 580,
											"end": 587,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 580,
											"end": 587,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 571,
											"end": 588,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 571,
											"end": 588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 571,
											"end": 588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 571,
											"end": 588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 571,
											"end": 588,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 571,
											"end": 588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 571,
											"end": 588,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 571,
											"end": 588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 571,
											"end": 588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 571,
											"end": 588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 571,
											"end": 588,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 571,
											"end": 588,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 571,
											"end": 588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 475,
											"end": 595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 475,
											"end": 595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 601,
											"end": 764,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 601,
											"end": 764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 659,
											"end": 663,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 659,
											"end": 670,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 639,
											"end": 643,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 659,
											"end": 675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 659,
											"end": 675,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 655,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 655,
											"end": 710,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 698,
											"end": 699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 601,
											"end": 764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 655,
											"end": 710,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 655,
											"end": 710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 735,
											"end": 739,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 740,
											"end": 751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 740,
											"end": 751,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 726,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 726,
											"end": 734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 726,
											"end": 734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 740,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 740,
											"end": 755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 754,
											"end": 755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 740,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 740,
											"end": 755,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 740,
											"end": 755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 735,
											"end": 756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 735,
											"end": 756,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 735,
											"end": 756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 735,
											"end": 756,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 735,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 735,
											"end": 756,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 735,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 735,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 735,
											"end": 756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 770,
											"end": 870,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 770,
											"end": 870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 818,
											"end": 822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 841,
											"end": 849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 841,
											"end": 863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 855,
											"end": 861,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 850,
											"end": 862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 850,
											"end": 862,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 850,
											"end": 862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 850,
											"end": 862,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 850,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 850,
											"end": 862,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 850,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 850,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 850,
											"end": 862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 850,
											"end": 862,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 850,
											"end": 862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 850,
											"end": 862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 850,
											"end": 862,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 850,
											"end": 862,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 850,
											"end": 862,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 850,
											"end": 862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 850,
											"end": 862,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 850,
											"end": 862,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 850,
											"end": 862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 850,
											"end": 862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 850,
											"end": 862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 850,
											"end": 862,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 850,
											"end": 862,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 841,
											"end": 863,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 841,
											"end": 863,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 841,
											"end": 863,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 841,
											"end": 863,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 841,
											"end": 863,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 841,
											"end": 863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 841,
											"end": 863,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 841,
											"end": 863,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 841,
											"end": 863,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 841,
											"end": 863,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 841,
											"end": 863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 841,
											"end": 863,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 841,
											"end": 863,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 841,
											"end": 863,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 770,
											"end": 870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 770,
											"end": 870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 196,
											"end": 550,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 196,
											"end": 550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 264,
											"end": 270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 278,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 325,
											"end": 327,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 322,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 304,
											"end": 311,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 300,
											"end": 323,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 296,
											"end": 328,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 293,
											"end": 345,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 293,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 293,
											"end": 345,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 341,
											"end": 342,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 339,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 331,
											"end": 343,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 293,
											"end": 345,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 293,
											"end": 345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 367,
											"end": 390,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 367,
											"end": 390,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 419,
											"end": 450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 419,
											"end": 450,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 409,
											"end": 451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 409,
											"end": 451,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 399,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 399,
											"end": 469,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 465,
											"end": 466,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 455,
											"end": 467,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 399,
											"end": 469,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 399,
											"end": 469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 488,
											"end": 493,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 540,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 525,
											"end": 543,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 525,
											"end": 543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 525,
											"end": 543,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 525,
											"end": 543,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 512,
											"end": 544,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 512,
											"end": 544,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 196,
											"end": 550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 555,
											"end": 735,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 555,
											"end": 735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 614,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 669,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 655,
											"end": 664,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 646,
											"end": 653,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 638,
											"end": 670,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 683,
											"end": 684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 681,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 673,
											"end": 685,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 635,
											"end": 687,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 706,
											"end": 729,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 706,
											"end": 729,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 555,
											"end": 735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 555,
											"end": 735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 740,
											"end": 867,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 740,
											"end": 867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 801,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 796,
											"end": 799,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 792,
											"end": 812,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 789,
											"end": 790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 782,
											"end": 813,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 832,
											"end": 836,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 829,
											"end": 830,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 822,
											"end": 837,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 856,
											"end": 860,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 853,
											"end": 854,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 861,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 872,
											"end": 1097,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 948,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 960,
											"end": 971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 960,
											"end": 971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 960,
											"end": 971,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 957,
											"end": 1091,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 957,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 957,
											"end": 1091,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1023,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 1008,
											"end": 1011,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1004,
											"end": 1024,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1001,
											"end": 1002,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 994,
											"end": 1025,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1052,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1045,
											"end": 1046,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1038,
											"end": 1053,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1080,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1073,
											"end": 1074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1081,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 957,
											"end": 1091,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 957,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 872,
											"end": 1097,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 872,
											"end": 1097,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 872,
											"end": 1097,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 872,
											"end": 1097,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 872,
											"end": 1097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"MappingIteration.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"first()": "3df4ddf4",
							"get(uint256)": "9507d39a",
							"last()": "47799da8",
							"length()": "1f7b6d32",
							"set(address,uint256)": "3825d828"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"first\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"get\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"last\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"length\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_key\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MappingIteration.sol\":\"MappingIteration\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MappingIteration.sol\":{\"keccak256\":\"0x39729bc7d6154cce40004f21aaa83d4fbbc2635a513f3fd95050c9452a39f053\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://39fe0f759d3fcdcc39f21a2bf323698f5815a86d88e8b3c8eb71cbd183de692e\",\"dweb:/ipfs/QmNwemsCh3Z9qz39EbhUNiTiwJ9rsHRe5gs6q6z2s2HKwS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "MappingIteration.sol:MappingIteration",
								"label": "balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 9,
								"contract": "MappingIteration.sol:MappingIteration",
								"label": "exists",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 12,
								"contract": "MappingIteration.sol:MappingIteration",
								"label": "keys",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"MappingIteration.sol": {
				"ast": {
					"absolutePath": "MappingIteration.sol",
					"exportedSymbols": {
						"MappingIteration": [
							110
						]
					},
					"id": 111,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MappingIteration",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 110,
							"linearizedBaseContracts": [
								110
							],
							"name": "MappingIteration",
							"nameLocation": "72:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "120:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 110,
									"src": "95:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "103:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "95:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 3,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "114:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "exists",
									"nameLocation": "159:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 110,
									"src": "134:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 8,
										"keyType": {
											"id": 6,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "142:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "134:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 7,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "153:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "keys",
									"nameLocation": "181:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 110,
									"src": "171:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 10,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "171:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 11,
										"nodeType": "ArrayTypeName",
										"src": "171:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "241:141:0",
										"statements": [
											{
												"expression": {
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 19,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "251:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 21,
														"indexExpression": {
															"id": 20,
															"name": "_key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "260:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "251:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 22,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "268:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "251:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "251:23:0"
											},
											{
												"condition": {
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "288:13:0",
													"subExpression": {
														"baseExpression": {
															"id": 25,
															"name": "exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "289:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 27,
														"indexExpression": {
															"id": 26,
															"name": "_key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "296:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "289:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 42,
												"nodeType": "IfStatement",
												"src": "284:92:0",
												"trueBody": {
													"id": 41,
													"nodeType": "Block",
													"src": "303:73:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 32,
																		"name": "_key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 14,
																		"src": "327:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 29,
																		"name": "keys",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 12,
																		"src": "317:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "322:4:0",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "317:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "317:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 34,
															"nodeType": "ExpressionStatement",
															"src": "317:15:0"
														},
														{
															"expression": {
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 35,
																		"name": "exists",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "346:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 37,
																	"indexExpression": {
																		"id": 36,
																		"name": "_key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 14,
																		"src": "353:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "346:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 38,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "361:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "346:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 40,
															"nodeType": "ExpressionStatement",
															"src": "346:19:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "3825d828",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "201:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "213:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "205:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "205:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "224:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "219:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "219:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "204:27:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "241:0:0"
									},
									"scope": 110,
									"src": "192:190:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "434:35:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 49,
														"name": "keys",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "451:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "456:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "451:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 48,
												"id": 51,
												"nodeType": "Return",
												"src": "444:18:0"
											}
										]
									},
									"functionSelector": "1f7b6d32",
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "397:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "403:2:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "428:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "428:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "427:6:0"
									},
									"scope": 110,
									"src": "388:81:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "520:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 59,
																	"name": "keys",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 12,
																	"src": "538:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "543:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "538:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "552:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "538:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 58,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "530:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "530:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "530:24:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 65,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "571:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 69,
													"indexExpression": {
														"baseExpression": {
															"id": 66,
															"name": "keys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "580:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 68,
														"indexExpression": {
															"hexValue": "30",
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "585:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "580:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "571:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 57,
												"id": 70,
												"nodeType": "Return",
												"src": "564:24:0"
											}
										]
									},
									"functionSelector": "3df4ddf4",
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "first",
									"nameLocation": "484:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "489:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "514:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "514:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "513:6:0"
									},
									"scope": 110,
									"src": "475:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "645:119:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 77,
															"name": "keys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "659:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "664:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "659:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "674:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "659:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 84,
												"nodeType": "IfStatement",
												"src": "655:55:0",
												"trueBody": {
													"id": 83,
													"nodeType": "Block",
													"src": "677:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "698:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 76,
															"id": 82,
															"nodeType": "Return",
															"src": "691:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 85,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "726:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 92,
													"indexExpression": {
														"baseExpression": {
															"id": 86,
															"name": "keys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "735:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 91,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 87,
																	"name": "keys",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 12,
																	"src": "740:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "745:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "740:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "754:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "740:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "735:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "726:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 76,
												"id": 93,
												"nodeType": "Return",
												"src": "719:38:0"
											}
										]
									},
									"functionSelector": "47799da8",
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "last",
									"nameLocation": "610:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "614:2:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "639:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "639:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:6:0"
									},
									"scope": 110,
									"src": "601:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "824:46:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 102,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "841:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 106,
													"indexExpression": {
														"baseExpression": {
															"id": 103,
															"name": "keys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "850:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 105,
														"indexExpression": {
															"id": 104,
															"name": "_index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "855:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "850:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "841:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 101,
												"id": 107,
												"nodeType": "Return",
												"src": "834:29:0"
											}
										]
									},
									"functionSelector": "9507d39a",
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "779:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "788:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "783:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "783:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "782:13:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "818:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "818:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:6:0"
									},
									"scope": 110,
									"src": "770:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 111,
							"src": "63:809:0",
							"usedErrors": []
						}
					],
					"src": "37:836:0"
				},
				"id": 0
			}
		}
	}
}